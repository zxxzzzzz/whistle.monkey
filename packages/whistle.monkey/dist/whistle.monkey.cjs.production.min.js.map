{"version":3,"file":"whistle.monkey.cjs.production.min.js","sources":["../src/file/rule.ts","../src/file/index.ts","../src/whistleServer/ui.ts","../src/whistleServer/rulesServer.ts","../src/whistleServer/server.ts"],"sourcesContent":["import { Rule } from './interface';\r\nimport micromatch from 'micromatch';\r\n\r\nconst store = new Map<string, Rule>()\r\n\r\nexport function addRule(key: string, rule: Rule) {\r\n  if (!rule) {\r\n    throw Error('rule不能为空')\r\n  }\r\n  store.set(key, rule)\r\n}\r\nexport function updateRule(key: string, rule: Rule) {\r\n  if (!rule) {\r\n    throw Error('rule不能为空')\r\n  }\r\n  const tempRule = store.get(key);\r\n  if (tempRule) {\r\n    store.set(key, { ...tempRule, ...rule })\r\n    return\r\n  }\r\n  store.set(key, rule)\r\n}\r\nexport function deleteRule(key: string) {\r\n  store.delete(key)\r\n}\r\nexport function disableRule(key: string) {\r\n  const tempRule = store.get(key);\r\n  if (tempRule) {\r\n    tempRule.disabled = true\r\n  }\r\n}\r\nexport function enableRule(key: string) {\r\n  const tempRule = store.get(key);\r\n  if (tempRule) {\r\n    tempRule.disabled = false\r\n  }\r\n}\r\nexport function getRule(key: string) {\r\n  return store.get(key)\r\n}\r\n\r\nexport function getRuleByUrl(url: string) {\r\n  const urlObj = new URL(url);\r\n  const pathNames = urlObj.pathname;\r\n  return [...store.values()].find(rule => {\r\n    return pathNames.includes(rule.request.url)\r\n  })\r\n}\r\n\r\nexport function query(queryList: string[]) {\r\n  return micromatch([...store.keys()], queryList)\r\n}\r\n\r\n","import chokidar from 'chokidar';\r\nimport fs from 'fs';\r\nimport YAML from 'yaml';\r\nimport path from 'path';\r\nimport { addRule, deleteRule, getRule, query, disableRule, enableRule } from './rule';\r\nexport { getRuleByUrl, getRule } from './rule'\r\nimport { addFunction } from '@zhangxin/mock-monkey-core';\r\nimport findup from 'findup-sync';\r\nimport micromatch from 'micromatch';\r\n\r\nlet currentWatcher: chokidar.FSWatcher\r\nexport async function watch(watchPath: string) {\r\n  if (currentWatcher) {\r\n    await currentWatcher.close()\r\n  }\r\n  if (!fs.existsSync(watchPath)) throw Error('path not exist')\r\n  currentWatcher = chokidar.watch(watchPath).on('all', (eventName, _path) => {\r\n    queue(\r\n      [handleJSFile, handleYAMLFile, handleIgnore],\r\n      [eventName, _path.replace(/[\\\\]/g, '/'), watchPath.replace(/[\\\\]/g, '/')]\r\n    )\r\n  });\r\n}\r\n\r\nfunction getObjFromYAML(filePath: string) {\r\n  try {\r\n    const content = fs.readFileSync(filePath, { encoding: 'utf-8' });\r\n    return YAML.parse(content);\r\n  } catch (error) {\r\n    return {};\r\n  }\r\n}\r\n\r\nfunction addFile(filePath: string) {\r\n  addRule(filePath, { ...getObjFromYAML(filePath), filePath, disabled: false });\r\n}\r\nfunction updateFile(filePath: string) {\r\n  addRule(filePath, getObjFromYAML(filePath));\r\n}\r\nfunction deleteFile(filePath: string) {\r\n  deleteRule(filePath);\r\n}\r\n\r\n\r\n\r\nasync function queue(funcs: Function[], params: any[]) {\r\n  for (const func of funcs) {\r\n    await func(...params)\r\n  }\r\n}\r\n\r\nfunction getIgnoreRules(dir: string, root: string) {\r\n  const ignoreFilePath = findup('.ignore', { cwd: dir })\r\n  let ignoreRules = [] as string[]\r\n  if (ignoreFilePath) {\r\n    ignoreRules = fs.readFileSync(ignoreFilePath, { encoding: 'utf-8' })\r\n      .split('\\n')\r\n      .filter(text => !text.startsWith('// '))\r\n      .map(text => {\r\n        const prefixPath = `${path.parse(ignoreFilePath.replace(/[\\\\]/g, '/')).dir}`.replace(root, '**')\r\n        return `${prefixPath}/${text.replace(/[\\s]*/g, '')}`\r\n      })\r\n  }\r\n  return ignoreRules\r\n}\r\n\r\nasync function handleJSFile(eventName: 'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir', _path: string) {\r\n  const parsedPath = path.parse(_path)\r\n  if (parsedPath.ext === '.js' && ['add', 'change'].includes(eventName)) {\r\n    const i18n = {\r\n      add: '添加',\r\n      change: '更新',\r\n      unlinkDir: '',\r\n      unlink: '',\r\n      addDir: ''\r\n    }\r\n    try {\r\n      if (eventName === 'change') delete require.cache[_path]\r\n      const mod = require(_path)\r\n      Object.keys(mod).forEach((key) => {\r\n        addFunction(key, mod[key])\r\n      })\r\n      global.sendLog({ message: `${i18n[eventName]}了函数<span class=\"text-pink-500\">${_path}</span>`, date: new Date().valueOf(), type: 'success', tags: ['添加', '函数'] })\r\n    } catch (error) {\r\n      global.sendLog({ message: `${i18n[eventName]}函数<span class=\"text-pink-500\">${_path}</span>失败，${error.message}`, date: new Date().valueOf(), type: 'success', tags: ['添加', '函数'] })\r\n    }\r\n  }\r\n}\r\n\r\nasync function handleYAMLFile(eventName: 'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir', _path: string, root: string) {\r\n  const parsedPath = path.parse(_path)\r\n  if (parsedPath.ext !== '.yaml') return\r\n  if (eventName === 'add') {\r\n    try {\r\n      addFile(_path);\r\n      const ignoreRules = getIgnoreRules(parsedPath.dir, root)\r\n      if (micromatch.isMatch(_path, ignoreRules)) {\r\n        disableRule(_path)\r\n        global.sendLog({ message: `禁用了模板<span class=\"text-pink-500\">${_path}</span>`, date: new Date().valueOf(), type: 'warning', tags: ['禁用'] })\r\n        return\r\n      }\r\n      global.sendLog({ message: `添加了模板<span class=\"text-pink-500\">${_path}</span>`, date: new Date().valueOf(), type: 'success', tags: ['添加'] })\r\n    } catch (error) {\r\n      global.sendLog({ message: `添加模板<span class=\"text-pink-500\">${_path}</span>失败,${error.message}`, date: new Date().valueOf(), type: 'error' })\r\n    }\r\n  }\r\n  if (eventName === 'change') {\r\n    try {\r\n      updateFile(_path);\r\n      global.sendLog({ date: new Date().valueOf(), message: `更新了模板<span class=\"text-pink-500\">${_path}</span>`, type: 'success', tags: ['更新'] })\r\n    } catch (error) {\r\n      global.sendLog({ message: `更新模板<span class=\"text-pink-500\">${_path}</span>失败`, date: new Date().valueOf(), type: 'error' })\r\n    }\r\n  }\r\n  if (eventName === 'unlinkDir') {\r\n    query([`${_path}/*`]).forEach((filePath) => {\r\n      deleteRule(filePath)\r\n      global.sendLog({ message: `禁用了模板<span class=\"text-pink-500\">${_path}</span>`, date: new Date().valueOf(), type: 'warning', tags: ['禁用'] })\r\n    })\r\n  }\r\n  if (eventName === 'unlink') {\r\n    deleteFile(_path);\r\n    global.sendLog({ date: new Date().valueOf(), message: `删除了模板<span class=\"text-pink-500\">${_path}</span>`, type: 'success', tags: ['删除'] })\r\n  }\r\n}\r\n\r\nasync function handleIgnore(_eventName: 'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir', _path: string, root: string) {\r\n  const parsedPath = path.parse(_path)\r\n  if (parsedPath.name === '.ignore') {\r\n    const ignoreRules = getIgnoreRules(parsedPath.dir, root)\r\n    query(['**']).forEach((filePath) => {\r\n      const rule = getRule(filePath)\r\n      if (rule?.disabled === true && !micromatch.isMatch(filePath, ignoreRules)) {\r\n        enableRule(filePath)\r\n        global.sendLog({ message: `启用了模板<span class=\"text-pink-500\">${filePath}</span>`, date: new Date().valueOf(), type: 'success', tags: ['启用'] })\r\n        return\r\n      }\r\n      if (rule?.disabled === false && micromatch.isMatch(filePath, ignoreRules)) {\r\n        disableRule(filePath)\r\n        global.sendLog({ message: `禁用了模板<span class=\"text-pink-500\">${filePath}</span>`, date: new Date().valueOf(), type: 'warning', tags: ['禁用'] })\r\n      }\r\n    })\r\n  }\r\n}","import Koa from 'koa';\r\nimport Router from '@koa/router';\r\n// @ts-ignore\r\nimport cors from '@koa/cors';\r\nimport { watch } from '../file/index';\r\nimport body from 'koa-body';\r\nimport send from 'koa-send';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\n// @ts-ignore\r\nimport { Server } from 'ws';\r\nimport { Log } from '../interface/log';\r\n\r\nconst app = new Koa();\r\nconst router = new Router();\r\n\r\n\r\nrouter.post('/cgi-bin/root', async (ctx) => {\r\n  const body = ctx.request.body;\r\n  if (!body.path) {\r\n    ctx.response.status = 500;\r\n    ctx.response.message = 'do not find property \"path\"';\r\n    return;\r\n  }\r\n  try {\r\n    const config = JSON.parse(fs.readFileSync('./config.json', { encoding: 'utf-8' }))\r\n    config.root = body.path\r\n    fs.writeFileSync('./config.json', JSON.stringify(config), { encoding: 'utf-8' })\r\n    await watch(body.path);\r\n    ctx.response.status = 200;\r\n    ctx.response.body = JSON.stringify({ path: body.path })\r\n  } catch (error) {\r\n    ctx.response.status = 500;\r\n    ctx.response.message = error.message;\r\n  }\r\n});\r\nrouter.get('/cgi-bin/root', async (ctx) => {\r\n  const { root } = JSON.parse(fs.readFileSync('./config.json', { encoding: 'utf-8' }))\r\n  ctx.response.status = 200;\r\n  ctx.response.body = JSON.stringify({ path: root })\r\n});\r\n\r\napp.proxy = true;\r\napp.silent = true;\r\napp\r\n  .use(body())\r\n  .use(cors({ credentials: true }))\r\n  .use(router.routes())\r\n  .use(router.allowedMethods())\r\n  .use(async (ctx) => {\r\n    const root = path.resolve(__dirname, '../public')\r\n    const parsedPath = path.parse(ctx.path);\r\n    if (ctx.path === '/plugin.monkey/') {\r\n      await send(ctx, './index.html', { root });\r\n      return;\r\n    }\r\n    if (parsedPath.ext !== '') {\r\n      const isExist = fs.existsSync(`${root}${ctx.path}`);\r\n      if (isExist) {\r\n        await send(ctx, `.${ctx.path}`, { root });\r\n        return;\r\n      }\r\n      ctx.response.status = 500;\r\n      ctx.response.message = 'file not found';\r\n      return;\r\n    }\r\n    await send(ctx, './index.html', { root });\r\n  })\r\n\r\nlet hasInit = false\r\nexport default (server: any) => {\r\n  if (!fs.existsSync('./config.json')) {\r\n    fs.writeFileSync('./config.json', JSON.stringify({ root: '' }), { encoding: 'utf-8' })\r\n  }\r\n  server.on('request', app.callback());\r\n  const wss = new Server({ port: 9999 });\r\n  wss.on('connection', function (_ws: any) {\r\n    global.sendLog = (log: Log) => {\r\n      _ws.send(JSON.stringify(log))\r\n    }\r\n    if (!hasInit) {\r\n      const { root } = JSON.parse(fs.readFileSync('./config.json', { encoding: 'utf-8' }))\r\n      if (root) {\r\n        watch(root)\r\n        hasInit = true\r\n      }\r\n    }\r\n  });\r\n\r\n};\r\n","import Koa from 'koa';\r\nimport {getRuleByUrl} from '../file/index';\r\n\r\nexport default (server:any) => {\r\n  const app = new Koa();\r\n  app.proxy = true;\r\n  app.silent = true;\r\n  app.use((ctx) => {\r\n    const href = ctx.request.href\r\n    const rule = getRuleByUrl(href)\r\n    if(rule){\r\n      const sendStr = encodeURIComponent(rule.filePath)\r\n      ctx.body = `* monkey://${sendStr}`\r\n    } else {\r\n      ctx.body = `${href} ${href}`\r\n    }\r\n  })\r\n  server.on('request', app.callback());\r\n};\r\n","import { getRule } from '../file/index';\r\nimport {generate, getValueByStatement} from '@zhangxin/mock-monkey-core';\r\n\r\nfunction isMatch(statement:string, val:any,scope:any){\r\n  const result = getValueByStatement(statement, scope)\r\n  if(typeof result === 'function'){\r\n    return result(val)\r\n  }\r\n  return val === result\r\n}\r\n\r\nexport function isContain(father: any, child: any, scope:any):boolean {\r\n  if(!child) return true\r\n  if (father === child) return true;\r\n  if(typeof child === 'string'){\r\n    return isMatch(child, father, scope)\r\n  }\r\n  if (typeof father !== 'object' || typeof child !== 'object') return false;\r\n  if(Array.isArray(father) && Array.isArray(child)) {\r\n    child.every((i) => {\r\n      if(typeof i !== 'object') return father.includes(i)\r\n      return father.some((fj) => {\r\n        isContain(fj, i, scope)\r\n      })\r\n    })\r\n  }\r\n  return Object.keys(child).every((childKey) =>{\r\n    const childItem = child[childKey]\r\n    const fatherItem = father[childKey]\r\n    if(!fatherItem) return false\r\n    return isContain(fatherItem, childItem, scope)\r\n  })\r\n}\r\n\r\nexport default (server: any) => {\r\n  server.on('request', (req: any, res: any) => {\r\n    const filePath = decodeURIComponent(req.originalReq.ruleValue);\r\n    const rule = getRule(filePath);\r\n    if (filePath) {\r\n      let data = '';\r\n      req.on('data', (chunk: any) => {\r\n        data += chunk.toString('utf-8');\r\n      });\r\n      req.on('end', () => {\r\n        if (!data) {\r\n          data = '{}';\r\n        }\r\n        try {\r\n          const url = new URL(req.url, `http://${req.headers.host}`);\r\n          const queryData: { [key: string]: any } = {};\r\n          url.searchParams.forEach((val, key) => {\r\n            queryData[key] = val;\r\n          });\r\n          const requestData = { ...JSON.parse(data), ...queryData };\r\n          const isFileMatch = isContain(requestData, rule?.request?.body, requestData);\r\n          if (!isFileMatch) {\r\n            req.passThrough();\r\n            return;\r\n          }\r\n          res.setHeader('Access-Control-Allow-Credentials', 'true');\r\n          res.setHeader('Access-Control-Allow-Origin', req.headers['origin']);\r\n          res.setHeader('Content-Type', 'application/json');\r\n          const body = generate(rule?.response?.body, requestData);\r\n          // if (typeof template.delay === 'number') {\r\n          //   setTimeout(() => {\r\n          //     res.end(JSON.stringify(body), 'utf-8');\r\n          //   }, template.delay);\r\n          //   return;\r\n          // }\r\n          res.end(JSON.stringify(body), 'utf-8');\r\n          global.sendLog({\r\n            type:'success',\r\n            message:`请求<span class=\"text-purple-500\">${url.pathname}</span>命中文件<span class=\"text-pink-500\">${filePath}</span>`,\r\n            date: new Date().valueOf(),\r\n            tags:['命中']\r\n          })\r\n        } catch (error) {\r\n          res.setHeader('Content-Type', 'text/plain');\r\n          res.end(error.message, 'utf-8');\r\n          console.log(error);\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n"],"names":["store","Map","addRule","key","rule","Error","set","deleteRule","delete","disableRule","tempRule","get","disabled","getRule","query","queryList","micromatch","keys","currentWatcher","async","watch","watchPath","close","fs","existsSync","chokidar","on","eventName","_path","funcs","params","func","queue","handleJSFile","handleYAMLFile","handleIgnore","replace","getObjFromYAML","filePath","content","readFileSync","encoding","YAML","parse","error","getIgnoreRules","dir","root","ignoreFilePath","findup","cwd","ignoreRules","split","filter","text","startsWith","map","path","ext","includes","i18n","add","change","unlinkDir","unlink","addDir","require","cache","mod","Object","forEach","addFunction","global","sendLog","message","date","Date","valueOf","type","tags","parsedPath","isMatch","updateFile","deleteFile","_eventName","name","enableRule","app","Koa","router","Router","post","body","ctx","request","response","status","config","JSON","writeFileSync","stringify","proxy","silent","use","cors","credentials","routes","allowedMethods","resolve","__dirname","send","hasInit","server","href","url","pathNames","URL","pathname","values","find","getRuleByUrl","sendStr","encodeURIComponent","callback","req","res","decodeURIComponent","originalReq","ruleValue","data","chunk","toString","headers","host","queryData","searchParams","val","requestData","isContain","father","child","scope","statement","result","getValueByStatement","Array","isArray","every","i","some","fj","childKey","fatherItem","_rule$request","passThrough","setHeader","generate","_rule$response","end","console","log","Server","port","_ws"],"mappings":"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"}