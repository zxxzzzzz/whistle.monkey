{"version":3,"file":"whistle.monkey.cjs.production.min.js","sources":["../src/file/rule.ts","../src/file/index.ts","../src/whistleServer/server.ts","../src/utils/match.ts","../src/whistleServer/ui.ts","../src/whistleServer/rulesServer.ts"],"sourcesContent":["import { Rule } from './interface';\r\nimport micromatch from 'micromatch';\r\n\r\nconst store = new Map<string, Rule>()\r\n\r\nexport function addRule(key: string, rule: Rule) {\r\n  if (!rule) {\r\n    throw Error('rule不能为空')\r\n  }\r\n  if (!rule?.request?.url) {\r\n    throw Error('request的url不能为空')\r\n  }\r\n  store.set(key, rule)\r\n}\r\nexport function updateRule(key: string, rule: Rule) {\r\n  if (!rule) {\r\n    throw Error('rule不能为空')\r\n  }\r\n  const tempRule = store.get(key);\r\n  if (tempRule) {\r\n    store.set(key, { ...tempRule, ...rule })\r\n    return\r\n  }\r\n  store.set(key, rule)\r\n}\r\nexport function deleteRule(key: string) {\r\n  store.delete(key)\r\n}\r\nexport function disableRule(key: string) {\r\n  const tempRule = store.get(key);\r\n  if (tempRule) {\r\n    tempRule.disabled = true\r\n  }\r\n}\r\nexport function enableRule(key: string) {\r\n  const tempRule = store.get(key);\r\n  if (tempRule) {\r\n    tempRule.disabled = false\r\n  }\r\n}\r\nexport function getRule(key: string) {\r\n  return store.get(key)\r\n}\r\n\r\nexport function getRuleByUrl(url: string) {\r\n  const urlObj = new URL(url);\r\n  const pathNames = urlObj.pathname;\r\n  return [...store.values()].find(rule => {\r\n    return pathNames.includes(rule.request.url)\r\n  })\r\n}\r\n\r\nexport function query(queryList: string[]) {\r\n  return micromatch([...store.keys()], queryList)\r\n}\r\n\r\n","import chokidar from 'chokidar';\r\nimport fs from 'fs';\r\nimport YAML from 'js-yaml';\r\nimport path from 'path';\r\nimport {\r\n  addRule,\r\n  deleteRule,\r\n  getRule,\r\n  query,\r\n  disableRule,\r\n  enableRule,\r\n} from './rule';\r\nexport { getRuleByUrl, getRule } from './rule';\r\nimport { addFunction } from '@zhangxin/mock-monkey-core';\r\nimport findup from 'findup-sync';\r\nimport micromatch from 'micromatch';\r\nimport { Rule } from './interface';\r\n\r\nconst NEXT = 'next';\r\n\r\nlet currentWatcher: chokidar.FSWatcher;\r\nexport async function watch(watchPath: string) {\r\n  if (currentWatcher) {\r\n    await currentWatcher.close();\r\n  }\r\n  if (!fs.existsSync(watchPath)) throw Error('path not exist');\r\n  currentWatcher = chokidar.watch(watchPath).on('all', (eventName, _path) => {\r\n    queue(\r\n      [handleInvalidYaml, handleJSFile, handleYAMLFile, handleIgnore],\r\n      [eventName, _path.replace(/[\\\\]/g, '/'), watchPath.replace(/[\\\\]/g, '/')]\r\n    );\r\n  });\r\n}\r\n\r\nfunction getObjFromYAML(filePath: string) {\r\n  const content = fs.readFileSync(filePath, { encoding: 'utf-8' });\r\n  return YAML.load(content) as Rule;\r\n}\r\n// 把json转换为yaml。不catch错误。\r\nfunction getValidJson(content: string) {\r\n  const contentWithoutDocs = content.replace(/\\/\\/[^\\n\\r]*/g, '');\r\n  console.log(contentWithoutDocs);\r\n  const parsed = JSON.parse(contentWithoutDocs);\r\n  // 有符合定义的结构体，就不覆盖用户之前输入了\r\n  if (parsed?.request) {\r\n    return parsed;\r\n  }\r\n  // 没有符合定义的结构体，说明试复制来的后端json对象\r\n  return {\r\n    request: { url: '', body: {} },\r\n    response: {\r\n      body: parsed,\r\n    },\r\n  };\r\n}\r\n\r\nasync function queue(funcs: Function[], params: any[]) {\r\n  for (const func of funcs) {\r\n    const flag = await func(...params);\r\n    if (flag !== NEXT) {\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nasync function handleJSFile(\r\n  eventName: 'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir',\r\n  _path: string\r\n) {\r\n  const parsedPath = path.parse(_path);\r\n  if (parsedPath.ext !== '.js' || !['add', 'change'].includes(eventName))\r\n    return NEXT;\r\n\r\n  const i18n = {\r\n    add: '添加',\r\n    change: '更新',\r\n    unlinkDir: '',\r\n    unlink: '',\r\n    addDir: '',\r\n  };\r\n  try {\r\n    if (eventName === 'change') delete require.cache[_path];\r\n    const mod = require(_path);\r\n    Object.keys(mod).forEach(key => {\r\n      addFunction(key, mod[key]);\r\n    });\r\n    global.sendLog({\r\n      message: `${i18n[eventName]}了函数<span class=\"text-pink-500\">${_path}</span>`,\r\n      date: new Date().valueOf(),\r\n      type: 'success',\r\n      tags: ['添加', '函数'],\r\n    });\r\n  } catch (error) {\r\n    global.sendLog({\r\n      message: `${i18n[eventName]}函数<span class=\"text-pink-500\">${_path}</span>失败，${error.message}`,\r\n      date: new Date().valueOf(),\r\n      type: 'success',\r\n      tags: ['添加', '函数'],\r\n    });\r\n  }\r\n  return\r\n}\r\n\r\nfunction addFile(filePath: string) {\r\n  addRule(filePath, {\r\n    ...getObjFromYAML(filePath),\r\n    filePath,\r\n    disabled: false,\r\n  } as Rule);\r\n}\r\nfunction updateFile(filePath: string) {\r\n  addRule(filePath, getObjFromYAML(filePath) as Rule);\r\n}\r\nfunction deleteFile(filePath: string) {\r\n  deleteRule(filePath);\r\n}\r\n\r\nasync function handleYAMLFile(\r\n  eventName: 'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir',\r\n  _path: string,\r\n  root: string\r\n) {\r\n  const parsedPath = path.parse(_path);\r\n  if (parsedPath.ext !== '.yaml') return NEXT;\r\n  if (eventName === 'add') {\r\n    try {\r\n      addFile(_path);\r\n      const ignoreRules = getIgnoreRules(parsedPath.dir, root);\r\n      if (micromatch.isMatch(_path, ignoreRules)) {\r\n        disableRule(_path);\r\n        global.sendLog({\r\n          message: `禁用了模板<span class=\"text-pink-500\">${_path}</span>`,\r\n          date: new Date().valueOf(),\r\n          type: 'warning',\r\n          tags: ['禁用'],\r\n        });\r\n        return;\r\n      }\r\n      global.sendLog({\r\n        message: `添加了模板<span class=\"text-pink-500\">${_path}</span>`,\r\n        date: new Date().valueOf(),\r\n        type: 'success',\r\n        tags: ['添加'],\r\n      });\r\n    } catch (error) {\r\n      global.sendLog({\r\n        message: `添加模板<span class=\"text-pink-500\">${_path}</span>失败,${error.message}`,\r\n        date: new Date().valueOf(),\r\n        type: 'error',\r\n      });\r\n    }\r\n  }\r\n  if (eventName === 'change') {\r\n    try {\r\n      updateFile(_path);\r\n      global.sendLog({\r\n        date: new Date().valueOf(),\r\n        message: `更新了模板<span class=\"text-pink-500\">${_path}</span>`,\r\n        type: 'success',\r\n        tags: ['更新'],\r\n      });\r\n    } catch (error) {\r\n      global.sendLog({\r\n        message: `更新模板<span class=\"text-pink-500\">${_path}</span>失败`,\r\n        date: new Date().valueOf(),\r\n        type: 'error',\r\n      });\r\n    }\r\n  }\r\n  if (eventName === 'unlinkDir') {\r\n    query([`${_path}/*`]).forEach(filePath => {\r\n      deleteRule(filePath);\r\n      global.sendLog({\r\n        message: `删除了模板<span class=\"text-pink-500\">${_path}</span>`,\r\n        date: new Date().valueOf(),\r\n        type: 'warning',\r\n        tags: ['禁用'],\r\n      });\r\n    });\r\n  }\r\n  if (eventName === 'unlink') {\r\n    deleteFile(_path);\r\n    global.sendLog({\r\n      date: new Date().valueOf(),\r\n      message: `删除了模板<span class=\"text-pink-500\">${_path}</span>`,\r\n      type: 'success',\r\n      tags: ['删除'],\r\n    });\r\n  }\r\n  return\r\n}\r\n\r\nfunction getIgnoreRules(dir: string, root: string) {\r\n  const ignoreFilePath = findup('.ignore', { cwd: dir });\r\n  let ignoreRules = [] as string[];\r\n  if (ignoreFilePath) {\r\n    ignoreRules = fs\r\n      .readFileSync(ignoreFilePath, { encoding: 'utf-8' })\r\n      .split('\\n')\r\n      .filter(text => !text.startsWith('// '))\r\n      .map(text => {\r\n        const prefixPath = `${\r\n          path.parse(ignoreFilePath.replace(/[\\\\]/g, '/')).dir\r\n        }`.replace(root, '**');\r\n        return `${prefixPath}/${text.replace(/[\\s]*/g, '')}`;\r\n      });\r\n  }\r\n  return ignoreRules;\r\n}\r\n\r\nasync function handleIgnore(\r\n  _eventName: 'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir',\r\n  _path: string,\r\n  root: string\r\n) {\r\n  const parsedPath = path.parse(_path);\r\n  if (parsedPath.name === '.ignore') {\r\n    const ignoreRules = getIgnoreRules(parsedPath.dir, root);\r\n    query(['**']).forEach(filePath => {\r\n      const rule = getRule(filePath);\r\n      if (\r\n        rule?.disabled === true &&\r\n        !micromatch.isMatch(filePath, ignoreRules)\r\n      ) {\r\n        enableRule(filePath);\r\n        global.sendLog({\r\n          message: `启用了模板<span class=\"text-pink-500\">${filePath}</span>`,\r\n          date: new Date().valueOf(),\r\n          type: 'success',\r\n          tags: ['启用'],\r\n        });\r\n        return;\r\n      }\r\n      if (\r\n        rule?.disabled === false &&\r\n        micromatch.isMatch(filePath, ignoreRules)\r\n      ) {\r\n        disableRule(filePath);\r\n        global.sendLog({\r\n          message: `禁用了模板<span class=\"text-pink-500\">${filePath}</span>`,\r\n          date: new Date().valueOf(),\r\n          type: 'warning',\r\n          tags: ['禁用'],\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// 处理非法的yaml格式\r\nasync function handleInvalidYaml(\r\n  eventName: 'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir',\r\n  _path: string\r\n) {\r\n  const parsedPath = path.parse(_path);\r\n  if (!['add', 'change'].includes(eventName)) return NEXT;\r\n  if (parsedPath.ext !== '.yaml') return NEXT;\r\n  let parsedJSON = {\r\n    request: { url: '', body: {} },\r\n    response: { body: {} },\r\n  } as Partial<Rule>;\r\n  const content = fs.readFileSync(_path, { encoding: 'utf-8' });\r\n  if (content === '') {\r\n    fs.writeFileSync(_path, YAML.dump({ ...parsedJSON }), {\r\n      encoding: 'utf-8',\r\n    });\r\n    return;\r\n  }\r\n  try {\r\n    const obj = getValidJson(content);\r\n    fs.writeFileSync(_path, YAML.dump(obj), { encoding: 'utf-8' });\r\n    return;\r\n  } catch (error) {\r\n  }\r\n  try {\r\n    YAML.load(content);\r\n    return NEXT\r\n  } catch (error) {\r\n  }\r\n  return;\r\n}\r\n","import { getRule } from '../file/index';\r\nimport { generate } from '@zhangxin/mock-monkey-core';\r\nimport { Rule } from '../file/interface';\r\nimport http from 'http';\r\nimport { isValid } from '../utils/match';\r\n\r\ninterface Request {\r\n  originalReq: {\r\n    ruleValue: string;\r\n  };\r\n  passThrough: () => {};\r\n}\r\n\r\nconst NEXT = 'next';\r\n\r\nexport default (server: http.Server) => {\r\n  server.on(\r\n    'request',\r\n    (req: http.IncomingMessage & Request, res: http.OutgoingMessage) => {\r\n      const filePath = decodeURIComponent(req.originalReq.ruleValue);\r\n      const rule = getRule(filePath);\r\n      if (filePath) {\r\n        let data = '';\r\n        req.on('data', (chunk: any) => {\r\n          data += chunk.toString('utf-8');\r\n        });\r\n        req.on('end', () => {\r\n          if (!data) {\r\n            data = '{}';\r\n          }\r\n          try {\r\n            const url = new URL(req.url || '', `http://${req.headers.host}`);\r\n            const queryData: { [key: string]: any } = {};\r\n            url.searchParams.forEach((val, key) => {\r\n              queryData[key] = val;\r\n            });\r\n            const requestData = { ...JSON.parse(data), ...queryData };\r\n            queue(\r\n              [handleCors, handleRequestDataMatch, handleDelay, handleDefault],\r\n              [req, res, rule, requestData]\r\n            );\r\n          } catch (error) {\r\n            res.setHeader('Content-Type', 'text/plain');\r\n            res.end(error.message, 'utf-8');\r\n            console.log(error);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  );\r\n};\r\n\r\n// 延迟功能\r\nfunction handleDelay(\r\n  request: http.IncomingMessage & Request,\r\n  response: http.OutgoingMessage,\r\n  rule: Rule,\r\n  requestData: any\r\n) {\r\n  if (typeof rule?.delay === 'number') {\r\n    const body = generate(rule?.response?.body, requestData);\r\n    const url = new URL(request.url || '', `http://${request.headers.host}`);\r\n    const filePath = decodeURIComponent(request.originalReq.ruleValue);\r\n    setTimeout(() => {\r\n      response.end(JSON.stringify(body), 'utf-8');\r\n      global.sendLog({\r\n        type: 'success',\r\n        message: `请求<span class=\"text-purple-500\">${url.pathname}\r\n          </span>延迟${rule.delay}ms, 命中文件<span class=\"text-pink-500\">${filePath}</span>`,\r\n        date: new Date().valueOf(),\r\n        tags: ['命中'],\r\n      });\r\n    }, rule.delay);\r\n    return;\r\n  }\r\n  return NEXT;\r\n}\r\n\r\n// 跨域设置\r\nfunction handleCors(\r\n  request: http.IncomingMessage & Request,\r\n  response: http.OutgoingMessage\r\n) {\r\n  response.setHeader('Access-Control-Allow-Credentials', 'true');\r\n  response.setHeader(\r\n    'Access-Control-Allow-Origin',\r\n    request.headers['origin'] || ''\r\n  );\r\n  response.setHeader('Content-Type', 'application/json');\r\n  return NEXT;\r\n}\r\n\r\n// 对入参的验证。\r\nfunction handleRequestDataMatch(\r\n  request: http.IncomingMessage & Request,\r\n  response: http.ServerResponse,\r\n  rule: Rule,\r\n  requestData: any\r\n) {\r\n  try {\r\n    isValid(requestData, rule?.request?.body, requestData);\r\n  } catch (error) {\r\n    response.statusCode = 400;\r\n    response.statusMessage = error.message;\r\n    response.end(\r\n      JSON.stringify({ code: 400, message: error.message }),\r\n      'utf-8'\r\n    );\r\n    const filePath = decodeURIComponent(request.originalReq.ruleValue);\r\n    const url = new URL(request.url || '', `http://${request.headers.host}`);\r\n    global.sendLog({\r\n      type: 'error',\r\n      message: `请求<span class=\"text-purple-500\">${url.pathname}</span>命中文件<span class=\"text-pink-500\">${filePath}</span>,但是参数有问题`,\r\n      date: new Date().valueOf(),\r\n      tags: ['命中','入参'],\r\n    });\r\n    return;\r\n  }\r\n  return NEXT;\r\n}\r\n// 兜底方案\r\nfunction handleDefault(\r\n  request: http.IncomingMessage & Request,\r\n  response: http.OutgoingMessage,\r\n  rule: Rule,\r\n  requestData: any\r\n) {\r\n  const filePath = decodeURIComponent(request.originalReq.ruleValue);\r\n  const body = generate(rule?.response?.body, requestData);\r\n  const url = new URL(request.url || '', `http://${request.headers.host}`);\r\n  response.end(JSON.stringify(body), 'utf-8');\r\n  global.sendLog({\r\n    type: 'success',\r\n    message: `请求<span class=\"text-purple-500\">${url.pathname}</span>命中文件<span class=\"text-pink-500\">${filePath}</span>`,\r\n    date: new Date().valueOf(),\r\n    tags: ['命中'],\r\n  });\r\n}\r\n\r\nfunction queue(items: Function[], params: unknown[]) {\r\n  let isBreak = false;\r\n  items.forEach(func => {\r\n    if (!isBreak) {\r\n      isBreak = func(...params) === NEXT ? false : true;\r\n    }\r\n  });\r\n}\r\n","import { getValueByStatement } from '@zhangxin/mock-monkey-core';\r\n\r\nfunction isEqual(statement: string, val: any, scope: any) {\r\n  const result = getValueByStatement(statement, scope);\r\n  if (typeof result === 'function') {\r\n    result(val);\r\n  }\r\n  return val === result;\r\n}\r\n\r\n// 根据多数接口调查，request body一般就一层结构，所以做个简单的，只遍历第一层的\r\nexport function isValid(\r\n  father: unknown,\r\n  child: unknown,\r\n  scope: unknown\r\n): boolean {\r\n  if (child == null) {\r\n    return true;\r\n  }\r\n  if (father == null) {\r\n    throw Error('入参不存在，但是却配置了入参验证, 所以请求失败');\r\n  }\r\n  Object.keys(child as { [key: string]: any }).forEach(key => {\r\n    const cv = (child as { [key: string]: any })[key];\r\n    const fv = (father as { [key: string]: any })[key];\r\n    const bo = isEqual(cv, fv, scope);\r\n    if (bo === false) {\r\n      throw Error(`入参字段 ${key} 不符合判定规则`);\r\n    }\r\n  });\r\n  return true\r\n}\r\n","import Koa from 'koa';\r\nimport Router from '@koa/router';\r\n// @ts-ignore\r\nimport cors from '@koa/cors';\r\nimport { watch } from '../file/index';\r\nimport body from 'koa-body';\r\nimport send from 'koa-send';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\n// @ts-ignore\r\nimport { Server } from 'ws';\r\nimport { Log } from '../interface/log';\r\n\r\nconst app = new Koa();\r\nconst router = new Router();\r\n\r\nrouter.post('/cgi-bin/root', async ctx => {\r\n  const body = ctx.request.body;\r\n  if (!body.path) {\r\n    ctx.response.status = 500;\r\n    ctx.response.message = 'do not find property \"path\"';\r\n    return;\r\n  }\r\n  try {\r\n    const config = JSON.parse(\r\n      fs.readFileSync('./config.json', { encoding: 'utf-8' })\r\n    );\r\n    config.root = body.path;\r\n    fs.writeFileSync('./config.json', JSON.stringify(config), {\r\n      encoding: 'utf-8',\r\n    });\r\n    await watch(body.path);\r\n    ctx.response.status = 200;\r\n    ctx.response.body = JSON.stringify({ path: body.path });\r\n  } catch (error) {\r\n    ctx.response.status = 500;\r\n    ctx.response.message = error.message;\r\n  }\r\n});\r\nrouter.get('/cgi-bin/root', async ctx => {\r\n  const { root } = JSON.parse(\r\n    fs.readFileSync('./config.json', { encoding: 'utf-8' })\r\n  );\r\n  ctx.response.status = 200;\r\n  ctx.response.body = JSON.stringify({ path: root });\r\n});\r\n\r\napp.proxy = true;\r\napp.silent = true;\r\napp\r\n  .use(body())\r\n  .use(cors({ credentials: true }))\r\n  .use(router.routes())\r\n  .use(router.allowedMethods())\r\n  .use(async ctx => {\r\n    const root = path.resolve(__dirname, '../public');\r\n    const parsedPath = path.parse(ctx.path);\r\n    if (ctx.path === '/plugin.monkey/') {\r\n      await send(ctx, './index.html', { root });\r\n      return;\r\n    }\r\n    if (parsedPath.ext !== '') {\r\n      const isExist = fs.existsSync(`${root}${ctx.path}`);\r\n      if (isExist) {\r\n        await send(ctx, `.${ctx.path}`, { root });\r\n        return;\r\n      }\r\n      ctx.response.status = 500;\r\n      ctx.response.message = 'file not found';\r\n      return;\r\n    }\r\n    await send(ctx, './index.html', { root });\r\n  });\r\n\r\nlet hasInit = false;\r\nexport default (server: any) => {\r\n  if (!fs.existsSync('./config.json')) {\r\n    fs.writeFileSync('./config.json', JSON.stringify({ root: '' }), {\r\n      encoding: 'utf-8',\r\n    });\r\n  }\r\n  server.on('request', app.callback());\r\n  const wss = new Server({ port: 9999 });\r\n  wss.on('connection', async function(_ws: any) {\r\n    global.sendLog = (log: Log) => {\r\n      _ws.send(JSON.stringify(log));\r\n    };\r\n    if (!hasInit) {\r\n      const { root } = JSON.parse(\r\n        fs.readFileSync('./config.json', { encoding: 'utf-8' })\r\n      );\r\n      if (root) {\r\n        try {\r\n          await watch(root);\r\n        } catch (error) {\r\n          sendLog({\r\n            type: 'error',\r\n            message: error.message,\r\n            date: new Date().valueOf(),\r\n            tags: ['路径'],\r\n          });\r\n        }\r\n        hasInit = true;\r\n      }\r\n    }\r\n  });\r\n};\r\n","import Koa from 'koa';\r\nimport {getRuleByUrl} from '../file/index';\r\n\r\nexport default (server:any) => {\r\n  const app = new Koa();\r\n  app.proxy = true;\r\n  app.silent = true;\r\n  app.use((ctx) => {\r\n    const href = ctx.request.href\r\n    const rule = getRuleByUrl(href)\r\n    if(rule){\r\n      const sendStr = encodeURIComponent(rule.filePath)\r\n      ctx.body = `* monkey://${sendStr}`\r\n    } else {\r\n      ctx.body = `${href} ${href}`\r\n    }\r\n  })\r\n  server.on('request', app.callback());\r\n};\r\n"],"names":["store","Map","addRule","key","rule","Error","request","_rule$request","url","set","deleteRule","delete","disableRule","tempRule","get","disabled","getRule","query","queryList","micromatch","keys","currentWatcher","async","watch","watchPath","close","fs","existsSync","chokidar","on","eventName","_path","funcs","params","func","queue","handleInvalidYaml","handleJSFile","handleYAMLFile","handleIgnore","replace","getObjFromYAML","filePath","content","readFileSync","encoding","YAML","load","path","parse","ext","includes","i18n","add","change","unlinkDir","unlink","addDir","require","cache","mod","Object","forEach","addFunction","global","sendLog","message","date","Date","valueOf","type","tags","error","root","parsedPath","ignoreRules","getIgnoreRules","dir","isMatch","updateFile","deleteFile","ignoreFilePath","findup","cwd","split","filter","text","startsWith","map","_eventName","name","enableRule","obj","contentWithoutDocs","console","log","parsed","JSON","body","response","getValidJson","writeFileSync","dump","handleDelay","requestData","delay","generate","_rule$response","URL","headers","host","decodeURIComponent","originalReq","ruleValue","setTimeout","end","stringify","pathname","handleCors","setHeader","handleRequestDataMatch","father","child","scope","statement","val","result","getValueByStatement","isEqual","isValid","statusCode","statusMessage","code","handleDefault","_rule$response2","app","Koa","router","Router","post","ctx","status","config","proxy","silent","use","cors","credentials","routes","allowedMethods","resolve","__dirname","send","hasInit","server","href","pathNames","values","find","getRuleByUrl","sendStr","encodeURIComponent","callback","req","res","data","chunk","toString","queryData","searchParams","items","isBreak","Server","port","_ws"],"mappings":"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"}