<<<<<<< HEAD
{"version":3,"file":"whistle.monkey.cjs.production.min.js","sources":["../src/file/rule.ts","../src/file/index.ts","../src/whistleServer/server.ts","../src/utils/match.ts","../src/whistleServer/ui.ts","../src/whistleServer/rulesServer.ts"],"sourcesContent":["import { Rule } from './interface';\r\nimport micromatch from 'micromatch';\r\n\r\nconst store = new Map<string, Rule>()\r\n\r\nexport function addRule(key: string, rule: Rule) {\r\n  if (!rule) {\r\n    throw Error('rule不能为空')\r\n  }\r\n  store.set(key, rule)\r\n}\r\nexport function updateRule(key: string, rule: Rule) {\r\n  if (!rule) {\r\n    throw Error('rule不能为空')\r\n  }\r\n  const tempRule = store.get(key);\r\n  if (tempRule) {\r\n    store.set(key, { ...tempRule, ...rule })\r\n    return\r\n  }\r\n  store.set(key, rule)\r\n}\r\nexport function deleteRule(key: string) {\r\n  store.delete(key)\r\n}\r\nexport function disableRule(key: string) {\r\n  const tempRule = store.get(key);\r\n  if (tempRule) {\r\n    tempRule.disabled = true\r\n  }\r\n}\r\nexport function enableRule(key: string) {\r\n  const tempRule = store.get(key);\r\n  if (tempRule) {\r\n    tempRule.disabled = false\r\n  }\r\n}\r\nexport function getRule(key: string) {\r\n  return store.get(key)\r\n}\r\n\r\nexport function getRuleByUrl(url: string) {\r\n  const urlObj = new URL(url);\r\n  const pathNames = urlObj.pathname;\r\n  return [...store.values()].find(rule => {\r\n    return pathNames.includes(rule.request.url)\r\n  })\r\n}\r\n\r\nexport function query(queryList: string[]) {\r\n  return micromatch([...store.keys()], queryList)\r\n}\r\n\r\n","import chokidar from 'chokidar';\r\nimport fs from 'fs';\r\nimport YAML from 'yaml';\r\nimport path from 'path';\r\nimport { addRule, deleteRule, getRule, query, disableRule, enableRule } from './rule';\r\nexport { getRuleByUrl, getRule } from './rule'\r\nimport { addFunction } from '@zhangxin/mock-monkey-core';\r\nimport findup from 'findup-sync';\r\nimport micromatch from 'micromatch';\r\n\r\nlet currentWatcher: chokidar.FSWatcher\r\nexport async function watch(watchPath: string) {\r\n  if (currentWatcher) {\r\n    await currentWatcher.close()\r\n  }\r\n  if (!fs.existsSync(watchPath)) throw Error('path not exist')\r\n  currentWatcher = chokidar.watch(watchPath).on('all', (eventName, _path) => {\r\n    queue(\r\n      [handleJSFile, handleYAMLFile, handleIgnore],\r\n      [eventName, _path.replace(/[\\\\]/g, '/'), watchPath.replace(/[\\\\]/g, '/')]\r\n    )\r\n  });\r\n}\r\n\r\nfunction getObjFromYAML(filePath: string) {\r\n  try {\r\n    const content = fs.readFileSync(filePath, { encoding: 'utf-8' });\r\n    return YAML.parse(content);\r\n  } catch (error) {\r\n    return {};\r\n  }\r\n}\r\n\r\nfunction addFile(filePath: string) {\r\n  addRule(filePath, { ...getObjFromYAML(filePath), filePath, disabled: false });\r\n}\r\nfunction updateFile(filePath: string) {\r\n  addRule(filePath, getObjFromYAML(filePath));\r\n}\r\nfunction deleteFile(filePath: string) {\r\n  deleteRule(filePath);\r\n}\r\n\r\n\r\n\r\nasync function queue(funcs: Function[], params: any[]) {\r\n  for (const func of funcs) {\r\n    await func(...params)\r\n  }\r\n}\r\n\r\nfunction getIgnoreRules(dir: string, root: string) {\r\n  const ignoreFilePath = findup('.ignore', { cwd: dir })\r\n  let ignoreRules = [] as string[]\r\n  if (ignoreFilePath) {\r\n    ignoreRules = fs.readFileSync(ignoreFilePath, { encoding: 'utf-8' })\r\n      .split('\\n')\r\n      .filter(text => !text.startsWith('// '))\r\n      .map(text => {\r\n        const prefixPath = `${path.parse(ignoreFilePath.replace(/[\\\\]/g, '/')).dir}`.replace(root, '**')\r\n        return `${prefixPath}/${text.replace(/[\\s]*/g, '')}`\r\n      })\r\n  }\r\n  return ignoreRules\r\n}\r\n\r\nasync function handleJSFile(eventName: 'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir', _path: string) {\r\n  const parsedPath = path.parse(_path)\r\n  if (parsedPath.ext === '.js' && ['add', 'change'].includes(eventName)) {\r\n    const i18n = {\r\n      add: '添加',\r\n      change: '更新',\r\n      unlinkDir: '',\r\n      unlink: '',\r\n      addDir: ''\r\n    }\r\n    try {\r\n      if (eventName === 'change') delete require.cache[_path]\r\n      const mod = require(_path)\r\n      Object.keys(mod).forEach((key) => {\r\n        addFunction(key, mod[key])\r\n      })\r\n      global.sendLog({ message: `${i18n[eventName]}了函数<span class=\"text-pink-500\">${_path}</span>`, date: new Date().valueOf(), type: 'success', tags: ['添加', '函数'] })\r\n    } catch (error) {\r\n      global.sendLog({ message: `${i18n[eventName]}函数<span class=\"text-pink-500\">${_path}</span>失败，${error.message}`, date: new Date().valueOf(), type: 'success', tags: ['添加', '函数'] })\r\n    }\r\n  }\r\n}\r\n\r\nasync function handleYAMLFile(eventName: 'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir', _path: string, root: string) {\r\n  const parsedPath = path.parse(_path)\r\n  if (parsedPath.ext !== '.yaml') return\r\n  if (eventName === 'add') {\r\n    try {\r\n      addFile(_path);\r\n      const ignoreRules = getIgnoreRules(parsedPath.dir, root)\r\n      if (micromatch.isMatch(_path, ignoreRules)) {\r\n        disableRule(_path)\r\n        global.sendLog({ message: `禁用了模板<span class=\"text-pink-500\">${_path}</span>`, date: new Date().valueOf(), type: 'warning', tags: ['禁用'] })\r\n        return\r\n      }\r\n      global.sendLog({ message: `添加了模板<span class=\"text-pink-500\">${_path}</span>`, date: new Date().valueOf(), type: 'success', tags: ['添加'] })\r\n    } catch (error) {\r\n      global.sendLog({ message: `添加模板<span class=\"text-pink-500\">${_path}</span>失败,${error.message}`, date: new Date().valueOf(), type: 'error' })\r\n    }\r\n  }\r\n  if (eventName === 'change') {\r\n    try {\r\n      updateFile(_path);\r\n      global.sendLog({ date: new Date().valueOf(), message: `更新了模板<span class=\"text-pink-500\">${_path}</span>`, type: 'success', tags: ['更新'] })\r\n    } catch (error) {\r\n      global.sendLog({ message: `更新模板<span class=\"text-pink-500\">${_path}</span>失败`, date: new Date().valueOf(), type: 'error' })\r\n    }\r\n  }\r\n  if (eventName === 'unlinkDir') {\r\n    query([`${_path}/*`]).forEach((filePath) => {\r\n      deleteRule(filePath)\r\n      global.sendLog({ message: `禁用了模板<span class=\"text-pink-500\">${_path}</span>`, date: new Date().valueOf(), type: 'warning', tags: ['禁用'] })\r\n    })\r\n  }\r\n  if (eventName === 'unlink') {\r\n    deleteFile(_path);\r\n    global.sendLog({ date: new Date().valueOf(), message: `删除了模板<span class=\"text-pink-500\">${_path}</span>`, type: 'success', tags: ['删除'] })\r\n  }\r\n}\r\n\r\nasync function handleIgnore(_eventName: 'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir', _path: string, root: string) {\r\n  const parsedPath = path.parse(_path)\r\n  if (parsedPath.name === '.ignore') {\r\n    const ignoreRules = getIgnoreRules(parsedPath.dir, root)\r\n    query(['**']).forEach((filePath) => {\r\n      const rule = getRule(filePath)\r\n      if (rule?.disabled === true && !micromatch.isMatch(filePath, ignoreRules)) {\r\n        enableRule(filePath)\r\n        global.sendLog({ message: `启用了模板<span class=\"text-pink-500\">${filePath}</span>`, date: new Date().valueOf(), type: 'success', tags: ['启用'] })\r\n        return\r\n      }\r\n      if (rule?.disabled === false && micromatch.isMatch(filePath, ignoreRules)) {\r\n        disableRule(filePath)\r\n        global.sendLog({ message: `禁用了模板<span class=\"text-pink-500\">${filePath}</span>`, date: new Date().valueOf(), type: 'warning', tags: ['禁用'] })\r\n      }\r\n    })\r\n  }\r\n}","import { getRule } from '../file/index';\r\nimport { generate } from '@zhangxin/mock-monkey-core';\r\nimport { Rule } from '../file/interface';\r\nimport http from 'http';\r\nimport { isValid } from '../utils/match';\r\n\r\ninterface Request {\r\n  originalReq: {\r\n    ruleValue: string;\r\n  };\r\n  passThrough: () => {};\r\n}\r\n\r\nconst NEXT = 'next';\r\n\r\nexport default (server: http.Server) => {\r\n  server.on(\r\n    'request',\r\n    (req: http.IncomingMessage & Request, res: http.OutgoingMessage) => {\r\n      const filePath = decodeURIComponent(req.originalReq.ruleValue);\r\n      const rule = getRule(filePath);\r\n      if (filePath) {\r\n        let data = '';\r\n        req.on('data', (chunk: any) => {\r\n          data += chunk.toString('utf-8');\r\n        });\r\n        req.on('end', () => {\r\n          if (!data) {\r\n            data = '{}';\r\n          }\r\n          try {\r\n            const url = new URL(req.url || '', `http://${req.headers.host}`);\r\n            const queryData: { [key: string]: any } = {};\r\n            url.searchParams.forEach((val, key) => {\r\n              queryData[key] = val;\r\n            });\r\n            const requestData = { ...JSON.parse(data), ...queryData };\r\n            queue(\r\n              [handleCors, handleRequestDataMatch, handleDelay, handleDefault],\r\n              [req, res, rule, requestData]\r\n            );\r\n          } catch (error) {\r\n            res.setHeader('Content-Type', 'text/plain');\r\n            res.end(error.message, 'utf-8');\r\n            console.log(error);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  );\r\n};\r\n\r\n// 延迟功能\r\nfunction handleDelay(\r\n  request: http.IncomingMessage & Request,\r\n  response: http.OutgoingMessage,\r\n  rule: Rule,\r\n  requestData: any\r\n) {\r\n  if (typeof rule?.delay === 'number') {\r\n    const body = generate(rule?.response?.body, requestData);\r\n    const url = new URL(request.url || '', `http://${request.headers.host}`);\r\n    const filePath = decodeURIComponent(request.originalReq.ruleValue);\r\n    setTimeout(() => {\r\n      response.end(JSON.stringify(body), 'utf-8');\r\n      global.sendLog({\r\n        type: 'success',\r\n        message: `请求<span class=\"text-purple-500\">${url.pathname}\r\n          </span>延迟${rule.delay}ms, 命中文件<span class=\"text-pink-500\">${filePath}</span>`,\r\n        date: new Date().valueOf(),\r\n        tags: ['命中'],\r\n      });\r\n    }, rule.delay);\r\n    return;\r\n  }\r\n  return NEXT;\r\n}\r\n\r\n// 跨域设置\r\nfunction handleCors(\r\n  request: http.IncomingMessage & Request,\r\n  response: http.OutgoingMessage\r\n) {\r\n  response.setHeader('Access-Control-Allow-Credentials', 'true');\r\n  response.setHeader(\r\n    'Access-Control-Allow-Origin',\r\n    request.headers['origin'] || ''\r\n  );\r\n  response.setHeader('Content-Type', 'application/json');\r\n  return NEXT;\r\n}\r\n\r\n// 对入参的验证。\r\nfunction handleRequestDataMatch(\r\n  request: http.IncomingMessage & Request,\r\n  response: http.ServerResponse,\r\n  rule: Rule,\r\n  requestData: any\r\n) {\r\n  try {\r\n    isValid(requestData, rule?.request?.body, requestData);\r\n  } catch (error) {\r\n    response.statusCode = 400;\r\n    response.statusMessage = error.message;\r\n    response.end(\r\n      JSON.stringify({ code: 400, message: error.message }),\r\n      'utf-8'\r\n    );\r\n    const filePath = decodeURIComponent(request.originalReq.ruleValue);\r\n    const url = new URL(request.url || '', `http://${request.headers.host}`);\r\n    global.sendLog({\r\n      type: 'error',\r\n      message: `请求<span class=\"text-purple-500\">${url.pathname}</span>命中文件<span class=\"text-pink-500\">${filePath}</span>,但是参数有问题`,\r\n      date: new Date().valueOf(),\r\n      tags: ['命中','入参'],\r\n    });\r\n    return;\r\n  }\r\n  return NEXT;\r\n}\r\n// 兜底方案\r\nfunction handleDefault(\r\n  request: http.IncomingMessage & Request,\r\n  response: http.OutgoingMessage,\r\n  rule: Rule,\r\n  requestData: any\r\n) {\r\n  const filePath = decodeURIComponent(request.originalReq.ruleValue);\r\n  const body = generate(rule?.response?.body, requestData);\r\n  const url = new URL(request.url || '', `http://${request.headers.host}`);\r\n  response.end(JSON.stringify(body), 'utf-8');\r\n  global.sendLog({\r\n    type: 'success',\r\n    message: `请求<span class=\"text-purple-500\">${url.pathname}</span>命中文件<span class=\"text-pink-500\">${filePath}</span>`,\r\n    date: new Date().valueOf(),\r\n    tags: ['命中'],\r\n  });\r\n}\r\n\r\nfunction queue(items: Function[], params: unknown[]) {\r\n  let isBreak = false;\r\n  items.forEach(func => {\r\n    if (!isBreak) {\r\n      isBreak = func(...params) === NEXT ? false : true;\r\n    }\r\n  });\r\n}\r\n","import { getValueByStatement } from '@zhangxin/mock-monkey-core';\r\n\r\nfunction isEqual(statement: string, val: any, scope: any) {\r\n  const result = getValueByStatement(statement, scope);\r\n  console.log(result, 're', statement);\r\n  if (typeof result === 'function') {\r\n    result(val);\r\n  }\r\n  return val === result;\r\n}\r\n\r\n// 根据多数接口调查，request body一般就一层结构，所以做个简单的，只遍历第一层的\r\nexport function isValid(\r\n  father: unknown,\r\n  child: unknown,\r\n  scope: unknown\r\n): boolean {\r\n  if (child == null) {\r\n    return true;\r\n  }\r\n  if (father == null) {\r\n    throw Error('入参不存在，但是却配置了入参验证, 所以请求失败');\r\n  }\r\n  Object.keys(child as { [key: string]: any }).forEach(key => {\r\n    const cv = (child as { [key: string]: any })[key];\r\n    const fv = (father as { [key: string]: any })[key];\r\n    const bo = isEqual(cv, fv, scope);\r\n    if (bo === false) {\r\n      throw Error(`入参字段 ${key} 不符合判定规则`);\r\n    }\r\n  });\r\n  return true\r\n}\r\n","import Koa from 'koa';\r\nimport Router from '@koa/router';\r\n// @ts-ignore\r\nimport cors from '@koa/cors';\r\nimport { watch } from '../file/index';\r\nimport body from 'koa-body';\r\nimport send from 'koa-send';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\n// @ts-ignore\r\nimport { Server } from 'ws';\r\nimport { Log } from '../interface/log';\r\n\r\nconst app = new Koa();\r\nconst router = new Router();\r\n\r\nrouter.post('/cgi-bin/root', async ctx => {\r\n  const body = ctx.request.body;\r\n  if (!body.path) {\r\n    ctx.response.status = 500;\r\n    ctx.response.message = 'do not find property \"path\"';\r\n    return;\r\n  }\r\n  try {\r\n    const config = JSON.parse(\r\n      fs.readFileSync('./config.json', { encoding: 'utf-8' })\r\n    );\r\n    config.root = body.path;\r\n    fs.writeFileSync('./config.json', JSON.stringify(config), {\r\n      encoding: 'utf-8',\r\n    });\r\n    await watch(body.path);\r\n    ctx.response.status = 200;\r\n    ctx.response.body = JSON.stringify({ path: body.path });\r\n  } catch (error) {\r\n    ctx.response.status = 500;\r\n    ctx.response.message = error.message;\r\n  }\r\n});\r\nrouter.get('/cgi-bin/root', async ctx => {\r\n  const { root } = JSON.parse(\r\n    fs.readFileSync('./config.json', { encoding: 'utf-8' })\r\n  );\r\n  ctx.response.status = 200;\r\n  ctx.response.body = JSON.stringify({ path: root });\r\n});\r\n\r\napp.proxy = true;\r\napp.silent = true;\r\napp\r\n  .use(body())\r\n  .use(cors({ credentials: true }))\r\n  .use(router.routes())\r\n  .use(router.allowedMethods())\r\n  .use(async ctx => {\r\n    const root = path.resolve(__dirname, '../public');\r\n    const parsedPath = path.parse(ctx.path);\r\n    if (ctx.path === '/plugin.monkey/') {\r\n      await send(ctx, './index.html', { root });\r\n      return;\r\n    }\r\n    if (parsedPath.ext !== '') {\r\n      const isExist = fs.existsSync(`${root}${ctx.path}`);\r\n      if (isExist) {\r\n        await send(ctx, `.${ctx.path}`, { root });\r\n        return;\r\n      }\r\n      ctx.response.status = 500;\r\n      ctx.response.message = 'file not found';\r\n      return;\r\n    }\r\n    await send(ctx, './index.html', { root });\r\n  });\r\n\r\nlet hasInit = false;\r\nexport default (server: any) => {\r\n  if (!fs.existsSync('./config.json')) {\r\n    fs.writeFileSync('./config.json', JSON.stringify({ root: '' }), {\r\n      encoding: 'utf-8',\r\n    });\r\n  }\r\n  server.on('request', app.callback());\r\n  const wss = new Server({ port: 9999 });\r\n  wss.on('connection', async function(_ws: any) {\r\n    global.sendLog = (log: Log) => {\r\n      _ws.send(JSON.stringify(log));\r\n    };\r\n    if (!hasInit) {\r\n      const { root } = JSON.parse(\r\n        fs.readFileSync('./config.json', { encoding: 'utf-8' })\r\n      );\r\n      if (root) {\r\n        try {\r\n          await watch(root);\r\n        } catch (error) {\r\n          sendLog({\r\n            type: 'error',\r\n            message: error.message,\r\n            date: new Date().valueOf(),\r\n            tags: ['路径'],\r\n          });\r\n        }\r\n        hasInit = true;\r\n      }\r\n    }\r\n  });\r\n};\r\n","import Koa from 'koa';\r\nimport {getRuleByUrl} from '../file/index';\r\n\r\nexport default (server:any) => {\r\n  const app = new Koa();\r\n  app.proxy = true;\r\n  app.silent = true;\r\n  app.use((ctx) => {\r\n    const href = ctx.request.href\r\n    const rule = getRuleByUrl(href)\r\n    if(rule){\r\n      const sendStr = encodeURIComponent(rule.filePath)\r\n      ctx.body = `* monkey://${sendStr}`\r\n    } else {\r\n      ctx.body = `${href} ${href}`\r\n    }\r\n  })\r\n  server.on('request', app.callback());\r\n};\r\n"],"names":["store","Map","addRule","key","rule","Error","set","deleteRule","delete","disableRule","tempRule","get","disabled","getRule","query","queryList","micromatch","keys","currentWatcher","async","watch","watchPath","close","fs","existsSync","chokidar","on","eventName","_path","funcs","params","func","queue","handleJSFile","handleYAMLFile","handleIgnore","replace","getObjFromYAML","filePath","content","readFileSync","encoding","YAML","parse","error","getIgnoreRules","dir","root","ignoreFilePath","findup","cwd","ignoreRules","split","filter","text","startsWith","map","path","ext","includes","i18n","add","change","unlinkDir","unlink","addDir","require","cache","mod","Object","forEach","addFunction","global","sendLog","message","date","Date","valueOf","type","tags","parsedPath","isMatch","updateFile","deleteFile","_eventName","name","enableRule","handleDelay","request","response","requestData","delay","body","generate","_rule$response","url","URL","headers","host","decodeURIComponent","originalReq","ruleValue","setTimeout","end","JSON","stringify","pathname","handleCors","setHeader","handleRequestDataMatch","father","child","scope","statement","val","result","getValueByStatement","console","log","isEqual","isValid","_rule$request","statusCode","statusMessage","code","handleDefault","_rule$response2","app","Koa","router","Router","post","ctx","status","config","writeFileSync","proxy","silent","use","cors","credentials","routes","allowedMethods","resolve","__dirname","send","hasInit","server","href","pathNames","values","find","getRuleByUrl","sendStr","encodeURIComponent","callback","req","res","data","chunk","toString","queryData","searchParams","items","isBreak","Server","port","_ws"],"mappings":"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"}
=======
{"version":3,"file":"whistle.monkey.cjs.production.min.js","sources":["../src/file/rule.ts","../src/file/index.ts","../src/whistleServer/server.ts","../src/utils/match.ts","../src/whistleServer/ui.ts","../src/whistleServer/rulesServer.ts"],"sourcesContent":["import { Rule } from './interface';\r\nimport micromatch from 'micromatch';\r\n\r\nconst store = new Map<string, Rule>()\r\n\r\nexport function addRule(key: string, rule: Rule) {\r\n  if (!rule) {\r\n    throw Error('rule不能为空')\r\n  }\r\n  if (!rule?.request?.url) {\r\n    throw Error('request的url不能为空')\r\n  }\r\n  store.set(key, rule)\r\n}\r\nexport function updateRule(key: string, rule: Rule) {\r\n  if (!rule) {\r\n    throw Error('rule不能为空')\r\n  }\r\n  const tempRule = store.get(key);\r\n  if (tempRule) {\r\n    store.set(key, { ...tempRule, ...rule })\r\n    return\r\n  }\r\n  store.set(key, rule)\r\n}\r\nexport function deleteRule(key: string) {\r\n  store.delete(key)\r\n}\r\nexport function disableRule(key: string) {\r\n  const tempRule = store.get(key);\r\n  if (tempRule) {\r\n    tempRule.disabled = true\r\n  }\r\n}\r\nexport function enableRule(key: string) {\r\n  const tempRule = store.get(key);\r\n  if (tempRule) {\r\n    tempRule.disabled = false\r\n  }\r\n}\r\nexport function getRule(key: string) {\r\n  return store.get(key)\r\n}\r\n\r\nexport function getRuleByUrl(url: string) {\r\n  const urlObj = new URL(url);\r\n  const pathNames = urlObj.pathname;\r\n  return [...store.values()].find(rule => {\r\n    return pathNames.includes(rule.request.url)\r\n  })\r\n}\r\n\r\nexport function query(queryList: string[]) {\r\n  return micromatch([...store.keys()], queryList)\r\n}\r\n\r\n","import chokidar from 'chokidar';\r\nimport fs from 'fs';\r\nimport YAML from 'js-yaml';\r\nimport path from 'path';\r\nimport { addRule, deleteRule, getRule, query, disableRule, enableRule } from './rule';\r\nexport { getRuleByUrl, getRule } from './rule'\r\nimport { addFunction } from '@zhangxin/mock-monkey-core';\r\nimport findup from 'findup-sync';\r\nimport micromatch from 'micromatch';\r\nimport { Rule } from './interface';\r\n\r\nlet currentWatcher: chokidar.FSWatcher\r\nexport async function watch(watchPath: string) {\r\n  if (currentWatcher) {\r\n    await currentWatcher.close()\r\n  }\r\n  if (!fs.existsSync(watchPath)) throw Error('path not exist')\r\n  currentWatcher = chokidar.watch(watchPath).on('all', (eventName, _path) => {\r\n    queue(\r\n      [handleJSFile, handleYAMLFile, handleIgnore],\r\n      [eventName, _path.replace(/[\\\\]/g, '/'), watchPath.replace(/[\\\\]/g, '/')]\r\n    )\r\n  });\r\n}\r\n\r\nfunction getObjFromYAML(filePath: string) {\r\n  let parsedJSON = {request:{url:'',body:{}},response:{body:{}}} as Partial<Rule>\r\n  try {\r\n    const content = fs.readFileSync(filePath, { encoding: 'utf-8' });\r\n    const parsedYaml = YAML.load(content) as Partial<Rule>\r\n    if (!parsedYaml) throw Error('文件内容不能为空')\r\n    // 把合法的json转换为合法yaml\r\n    if(!parsedYaml.request){\r\n      parsedJSON = formatJsonToYAML(content)\r\n      fs.writeFileSync(filePath, YAML.dump({...parsedJSON }), { encoding: 'utf-8' })\r\n      return parsedJSON\r\n    }\r\n    return parsedYaml\r\n  } catch (error) {\r\n    fs.writeFileSync(filePath, YAML.dump(parsedJSON), { encoding: 'utf-8' })\r\n    return {};\r\n  }\r\n}\r\n// 把json转换为yaml。不catch错误。\r\nfunction formatJsonToYAML(content: string) {\r\n  const contentWithoutDocs = content.replace(/\\/\\/[\\s\\S]*/g, '')\r\n  const parsed = JSON.parse(contentWithoutDocs)\r\n  // 有符合定义的结构体，就不覆盖用户之前输入了\r\n  if (parsed?.request) {\r\n    return {}\r\n  }\r\n  // 没有符合定义的结构体，说明试复制来的后端json对象\r\n  return {\r\n    request: { url: '',body:{} },\r\n    response: {\r\n      body: parsed\r\n    }\r\n  }\r\n}\r\n\r\nfunction addFile(filePath: string) {\r\n  addRule(filePath, { ...getObjFromYAML(filePath), filePath, disabled: false } as Rule);\r\n}\r\nfunction updateFile(filePath: string) {\r\n  addRule(filePath, getObjFromYAML(filePath) as Rule);\r\n}\r\nfunction deleteFile(filePath: string) {\r\n  deleteRule(filePath);\r\n}\r\n\r\n\r\n\r\nasync function queue(funcs: Function[], params: any[]) {\r\n  for (const func of funcs) {\r\n    await func(...params)\r\n  }\r\n}\r\n\r\nfunction getIgnoreRules(dir: string, root: string) {\r\n  const ignoreFilePath = findup('.ignore', { cwd: dir })\r\n  let ignoreRules = [] as string[]\r\n  if (ignoreFilePath) {\r\n    ignoreRules = fs.readFileSync(ignoreFilePath, { encoding: 'utf-8' })\r\n      .split('\\n')\r\n      .filter(text => !text.startsWith('// '))\r\n      .map(text => {\r\n        const prefixPath = `${path.parse(ignoreFilePath.replace(/[\\\\]/g, '/')).dir}`.replace(root, '**')\r\n        return `${prefixPath}/${text.replace(/[\\s]*/g, '')}`\r\n      })\r\n  }\r\n  return ignoreRules\r\n}\r\n\r\nasync function handleJSFile(eventName: 'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir', _path: string) {\r\n  const parsedPath = path.parse(_path)\r\n  if (parsedPath.ext === '.js' && ['add', 'change'].includes(eventName)) {\r\n    const i18n = {\r\n      add: '添加',\r\n      change: '更新',\r\n      unlinkDir: '',\r\n      unlink: '',\r\n      addDir: ''\r\n    }\r\n    try {\r\n      if (eventName === 'change') delete require.cache[_path]\r\n      const mod = require(_path)\r\n      Object.keys(mod).forEach((key) => {\r\n        addFunction(key, mod[key])\r\n      })\r\n      global.sendLog({ message: `${i18n[eventName]}了函数<span class=\"text-pink-500\">${_path}</span>`, date: new Date().valueOf(), type: 'success', tags: ['添加', '函数'] })\r\n    } catch (error) {\r\n      global.sendLog({ message: `${i18n[eventName]}函数<span class=\"text-pink-500\">${_path}</span>失败，${error.message}`, date: new Date().valueOf(), type: 'success', tags: ['添加', '函数'] })\r\n    }\r\n  }\r\n}\r\n\r\nasync function handleYAMLFile(eventName: 'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir', _path: string, root: string) {\r\n  const parsedPath = path.parse(_path)\r\n  if (parsedPath.ext !== '.yaml') return\r\n  if (eventName === 'add') {\r\n    try {\r\n      addFile(_path);\r\n      const ignoreRules = getIgnoreRules(parsedPath.dir, root)\r\n      if (micromatch.isMatch(_path, ignoreRules)) {\r\n        disableRule(_path)\r\n        global.sendLog({ message: `禁用了模板<span class=\"text-pink-500\">${_path}</span>`, date: new Date().valueOf(), type: 'warning', tags: ['禁用'] })\r\n        return\r\n      }\r\n      global.sendLog({ message: `添加了模板<span class=\"text-pink-500\">${_path}</span>`, date: new Date().valueOf(), type: 'success', tags: ['添加'] })\r\n    } catch (error) {\r\n      global.sendLog({ message: `添加模板<span class=\"text-pink-500\">${_path}</span>失败,${error.message}`, date: new Date().valueOf(), type: 'error' })\r\n    }\r\n  }\r\n  if (eventName === 'change') {\r\n    try {\r\n      updateFile(_path);\r\n      global.sendLog({ date: new Date().valueOf(), message: `更新了模板<span class=\"text-pink-500\">${_path}</span>`, type: 'success', tags: ['更新'] })\r\n    } catch (error) {\r\n      global.sendLog({ message: `更新模板<span class=\"text-pink-500\">${_path}</span>失败`, date: new Date().valueOf(), type: 'error' })\r\n    }\r\n  }\r\n  if (eventName === 'unlinkDir') {\r\n    query([`${_path}/*`]).forEach((filePath) => {\r\n      deleteRule(filePath)\r\n      global.sendLog({ message: `禁用了模板<span class=\"text-pink-500\">${_path}</span>`, date: new Date().valueOf(), type: 'warning', tags: ['禁用'] })\r\n    })\r\n  }\r\n  if (eventName === 'unlink') {\r\n    deleteFile(_path);\r\n    global.sendLog({ date: new Date().valueOf(), message: `删除了模板<span class=\"text-pink-500\">${_path}</span>`, type: 'success', tags: ['删除'] })\r\n  }\r\n}\r\n\r\nasync function handleIgnore(_eventName: 'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir', _path: string, root: string) {\r\n  const parsedPath = path.parse(_path)\r\n  if (parsedPath.name === '.ignore') {\r\n    const ignoreRules = getIgnoreRules(parsedPath.dir, root)\r\n    query(['**']).forEach((filePath) => {\r\n      const rule = getRule(filePath)\r\n      if (rule?.disabled === true && !micromatch.isMatch(filePath, ignoreRules)) {\r\n        enableRule(filePath)\r\n        global.sendLog({ message: `启用了模板<span class=\"text-pink-500\">${filePath}</span>`, date: new Date().valueOf(), type: 'success', tags: ['启用'] })\r\n        return\r\n      }\r\n      if (rule?.disabled === false && micromatch.isMatch(filePath, ignoreRules)) {\r\n        disableRule(filePath)\r\n        global.sendLog({ message: `禁用了模板<span class=\"text-pink-500\">${filePath}</span>`, date: new Date().valueOf(), type: 'warning', tags: ['禁用'] })\r\n      }\r\n    })\r\n  }\r\n}","import { getRule } from '../file/index';\r\nimport { generate } from '@zhangxin/mock-monkey-core';\r\nimport { Rule } from '../file/interface';\r\nimport http from 'http';\r\nimport { isValid } from '../utils/match';\r\n\r\ninterface Request {\r\n  originalReq: {\r\n    ruleValue: string;\r\n  };\r\n  passThrough: () => {};\r\n}\r\n\r\nconst NEXT = 'next';\r\n\r\nexport default (server: http.Server) => {\r\n  server.on(\r\n    'request',\r\n    (req: http.IncomingMessage & Request, res: http.OutgoingMessage) => {\r\n      const filePath = decodeURIComponent(req.originalReq.ruleValue);\r\n      const rule = getRule(filePath);\r\n      if (filePath) {\r\n        let data = '';\r\n        req.on('data', (chunk: any) => {\r\n          data += chunk.toString('utf-8');\r\n        });\r\n        req.on('end', () => {\r\n          if (!data) {\r\n            data = '{}';\r\n          }\r\n          try {\r\n            const url = new URL(req.url || '', `http://${req.headers.host}`);\r\n            const queryData: { [key: string]: any } = {};\r\n            url.searchParams.forEach((val, key) => {\r\n              queryData[key] = val;\r\n            });\r\n            const requestData = { ...JSON.parse(data), ...queryData };\r\n            queue(\r\n              [handleCors, handleRequestDataMatch, handleDelay, handleDefault],\r\n              [req, res, rule, requestData]\r\n            );\r\n          } catch (error) {\r\n            res.setHeader('Content-Type', 'text/plain');\r\n            res.end(error.message, 'utf-8');\r\n            console.log(error);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  );\r\n};\r\n\r\n// 延迟功能\r\nfunction handleDelay(\r\n  request: http.IncomingMessage & Request,\r\n  response: http.OutgoingMessage,\r\n  rule: Rule,\r\n  requestData: any\r\n) {\r\n  if (typeof rule?.delay === 'number') {\r\n    const body = generate(rule?.response?.body, requestData);\r\n    const url = new URL(request.url || '', `http://${request.headers.host}`);\r\n    const filePath = decodeURIComponent(request.originalReq.ruleValue);\r\n    setTimeout(() => {\r\n      response.end(JSON.stringify(body), 'utf-8');\r\n      global.sendLog({\r\n        type: 'success',\r\n        message: `请求<span class=\"text-purple-500\">${url.pathname}\r\n          </span>延迟${rule.delay}ms, 命中文件<span class=\"text-pink-500\">${filePath}</span>`,\r\n        date: new Date().valueOf(),\r\n        tags: ['命中'],\r\n      });\r\n    }, rule.delay);\r\n    return;\r\n  }\r\n  return NEXT;\r\n}\r\n\r\n// 跨域设置\r\nfunction handleCors(\r\n  request: http.IncomingMessage & Request,\r\n  response: http.OutgoingMessage\r\n) {\r\n  response.setHeader('Access-Control-Allow-Credentials', 'true');\r\n  response.setHeader(\r\n    'Access-Control-Allow-Origin',\r\n    request.headers['origin'] || ''\r\n  );\r\n  response.setHeader('Content-Type', 'application/json');\r\n  return NEXT;\r\n}\r\n\r\n// 对入参的验证。\r\nfunction handleRequestDataMatch(\r\n  request: http.IncomingMessage & Request,\r\n  response: http.ServerResponse,\r\n  rule: Rule,\r\n  requestData: any\r\n) {\r\n  try {\r\n    isValid(requestData, rule?.request?.body, requestData);\r\n  } catch (error) {\r\n    response.statusCode = 400;\r\n    response.statusMessage = error.message;\r\n    response.end(\r\n      JSON.stringify({ code: 400, message: error.message }),\r\n      'utf-8'\r\n    );\r\n    const filePath = decodeURIComponent(request.originalReq.ruleValue);\r\n    const url = new URL(request.url || '', `http://${request.headers.host}`);\r\n    global.sendLog({\r\n      type: 'error',\r\n      message: `请求<span class=\"text-purple-500\">${url.pathname}</span>命中文件<span class=\"text-pink-500\">${filePath}</span>,但是参数有问题`,\r\n      date: new Date().valueOf(),\r\n      tags: ['命中','入参'],\r\n    });\r\n    return;\r\n  }\r\n  return NEXT;\r\n}\r\n// 兜底方案\r\nfunction handleDefault(\r\n  request: http.IncomingMessage & Request,\r\n  response: http.OutgoingMessage,\r\n  rule: Rule,\r\n  requestData: any\r\n) {\r\n  const filePath = decodeURIComponent(request.originalReq.ruleValue);\r\n  const body = generate(rule?.response?.body, requestData);\r\n  const url = new URL(request.url || '', `http://${request.headers.host}`);\r\n  response.end(JSON.stringify(body), 'utf-8');\r\n  global.sendLog({\r\n    type: 'success',\r\n    message: `请求<span class=\"text-purple-500\">${url.pathname}</span>命中文件<span class=\"text-pink-500\">${filePath}</span>`,\r\n    date: new Date().valueOf(),\r\n    tags: ['命中'],\r\n  });\r\n}\r\n\r\nfunction queue(items: Function[], params: unknown[]) {\r\n  let isBreak = false;\r\n  items.forEach(func => {\r\n    if (!isBreak) {\r\n      isBreak = func(...params) === NEXT ? false : true;\r\n    }\r\n  });\r\n}\r\n","import { getValueByStatement } from '@zhangxin/mock-monkey-core';\r\n\r\nfunction isEqual(statement: string, val: any, scope: any) {\r\n  const result = getValueByStatement(statement, scope);\r\n  if (typeof result === 'function') {\r\n    result(val);\r\n  }\r\n  return val === result;\r\n}\r\n\r\n// 根据多数接口调查，request body一般就一层结构，所以做个简单的，只遍历第一层的\r\nexport function isValid(\r\n  father: unknown,\r\n  child: unknown,\r\n  scope: unknown\r\n): boolean {\r\n  if (child == null) {\r\n    return true;\r\n  }\r\n  if (father == null) {\r\n    throw Error('入参不存在，但是却配置了入参验证, 所以请求失败');\r\n  }\r\n  Object.keys(child as { [key: string]: any }).forEach(key => {\r\n    const cv = (child as { [key: string]: any })[key];\r\n    const fv = (father as { [key: string]: any })[key];\r\n    const bo = isEqual(cv, fv, scope);\r\n    if (bo === false) {\r\n      throw Error(`入参字段 ${key} 不符合判定规则`);\r\n    }\r\n  });\r\n  return true\r\n}\r\n","import Koa from 'koa';\r\nimport Router from '@koa/router';\r\n// @ts-ignore\r\nimport cors from '@koa/cors';\r\nimport { watch } from '../file/index';\r\nimport body from 'koa-body';\r\nimport send from 'koa-send';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\n// @ts-ignore\r\nimport { Server } from 'ws';\r\nimport { Log } from '../interface/log';\r\n\r\nconst app = new Koa();\r\nconst router = new Router();\r\n\r\nrouter.post('/cgi-bin/root', async ctx => {\r\n  const body = ctx.request.body;\r\n  if (!body.path) {\r\n    ctx.response.status = 500;\r\n    ctx.response.message = 'do not find property \"path\"';\r\n    return;\r\n  }\r\n  try {\r\n    const config = JSON.parse(\r\n      fs.readFileSync('./config.json', { encoding: 'utf-8' })\r\n    );\r\n    config.root = body.path;\r\n    fs.writeFileSync('./config.json', JSON.stringify(config), {\r\n      encoding: 'utf-8',\r\n    });\r\n    await watch(body.path);\r\n    ctx.response.status = 200;\r\n    ctx.response.body = JSON.stringify({ path: body.path });\r\n  } catch (error) {\r\n    ctx.response.status = 500;\r\n    ctx.response.message = error.message;\r\n  }\r\n});\r\nrouter.get('/cgi-bin/root', async ctx => {\r\n  const { root } = JSON.parse(\r\n    fs.readFileSync('./config.json', { encoding: 'utf-8' })\r\n  );\r\n  ctx.response.status = 200;\r\n  ctx.response.body = JSON.stringify({ path: root });\r\n});\r\n\r\napp.proxy = true;\r\napp.silent = true;\r\napp\r\n  .use(body())\r\n  .use(cors({ credentials: true }))\r\n  .use(router.routes())\r\n  .use(router.allowedMethods())\r\n  .use(async ctx => {\r\n    const root = path.resolve(__dirname, '../public');\r\n    const parsedPath = path.parse(ctx.path);\r\n    if (ctx.path === '/plugin.monkey/') {\r\n      await send(ctx, './index.html', { root });\r\n      return;\r\n    }\r\n    if (parsedPath.ext !== '') {\r\n      const isExist = fs.existsSync(`${root}${ctx.path}`);\r\n      if (isExist) {\r\n        await send(ctx, `.${ctx.path}`, { root });\r\n        return;\r\n      }\r\n      ctx.response.status = 500;\r\n      ctx.response.message = 'file not found';\r\n      return;\r\n    }\r\n    await send(ctx, './index.html', { root });\r\n  });\r\n\r\nlet hasInit = false;\r\nexport default (server: any) => {\r\n  if (!fs.existsSync('./config.json')) {\r\n    fs.writeFileSync('./config.json', JSON.stringify({ root: '' }), {\r\n      encoding: 'utf-8',\r\n    });\r\n  }\r\n  server.on('request', app.callback());\r\n  const wss = new Server({ port: 9999 });\r\n  wss.on('connection', async function(_ws: any) {\r\n    global.sendLog = (log: Log) => {\r\n      _ws.send(JSON.stringify(log));\r\n    };\r\n    if (!hasInit) {\r\n      const { root } = JSON.parse(\r\n        fs.readFileSync('./config.json', { encoding: 'utf-8' })\r\n      );\r\n      if (root) {\r\n        try {\r\n          await watch(root);\r\n        } catch (error) {\r\n          sendLog({\r\n            type: 'error',\r\n            message: error.message,\r\n            date: new Date().valueOf(),\r\n            tags: ['路径'],\r\n          });\r\n        }\r\n        hasInit = true;\r\n      }\r\n    }\r\n  });\r\n};\r\n","import Koa from 'koa';\r\nimport {getRuleByUrl} from '../file/index';\r\n\r\nexport default (server:any) => {\r\n  const app = new Koa();\r\n  app.proxy = true;\r\n  app.silent = true;\r\n  app.use((ctx) => {\r\n    const href = ctx.request.href\r\n    const rule = getRuleByUrl(href)\r\n    if(rule){\r\n      const sendStr = encodeURIComponent(rule.filePath)\r\n      ctx.body = `* monkey://${sendStr}`\r\n    } else {\r\n      ctx.body = `${href} ${href}`\r\n    }\r\n  })\r\n  server.on('request', app.callback());\r\n};\r\n"],"names":["store","Map","addRule","key","rule","Error","request","_rule$request","url","set","deleteRule","delete","disableRule","tempRule","get","disabled","getRule","query","queryList","micromatch","keys","currentWatcher","async","watch","watchPath","close","fs","existsSync","chokidar","on","eventName","_path","funcs","params","func","queue","handleJSFile","handleYAMLFile","handleIgnore","replace","getObjFromYAML","filePath","parsedJSON","body","response","content","readFileSync","encoding","parsedYaml","YAML","load","contentWithoutDocs","parsed","JSON","parse","formatJsonToYAML","writeFileSync","dump","error","getIgnoreRules","dir","root","ignoreFilePath","findup","cwd","ignoreRules","split","filter","text","startsWith","map","path","ext","includes","i18n","add","change","unlinkDir","unlink","addDir","require","cache","mod","Object","forEach","addFunction","global","sendLog","message","date","Date","valueOf","type","tags","parsedPath","isMatch","updateFile","deleteFile","_eventName","name","enableRule","handleDelay","requestData","delay","generate","_rule$response","URL","headers","host","decodeURIComponent","originalReq","ruleValue","setTimeout","end","stringify","pathname","handleCors","setHeader","handleRequestDataMatch","father","child","scope","statement","val","result","getValueByStatement","isEqual","isValid","statusCode","statusMessage","code","handleDefault","_rule$response2","app","Koa","router","Router","post","ctx","status","config","proxy","silent","use","cors","credentials","routes","allowedMethods","resolve","__dirname","send","hasInit","server","href","pathNames","values","find","getRuleByUrl","sendStr","encodeURIComponent","callback","req","res","data","chunk","toString","queryData","searchParams","items","isBreak","console","log","Server","port","_ws"],"mappings":"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"}
>>>>>>> d1364def56a5c386776ecc382d64cd288fdf7905
