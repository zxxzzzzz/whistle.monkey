{"version":3,"file":"whistle.monkey.cjs.production.min.js","sources":["../src/file/rule.ts","../src/file/index.ts","../src/whistleServer/ui.ts","../src/whistleServer/rulesServer.ts","../src/whistleServer/server.ts"],"sourcesContent":["import { Rule } from './interface';\r\nimport micromatch from 'micromatch';\r\n\r\nconst store = new Map<string, Rule>()\r\n\r\nexport function addRule(key: string, rule: Rule) {\r\n  if (!rule) {\r\n    throw Error('rule不能为空')\r\n  }\r\n  if (!rule?.request?.url) {\r\n    throw Error('request的url不能为空')\r\n  }\r\n  store.set(key, rule)\r\n}\r\nexport function updateRule(key: string, rule: Rule) {\r\n  if (!rule) {\r\n    throw Error('rule不能为空')\r\n  }\r\n  const tempRule = store.get(key);\r\n  if (tempRule) {\r\n    store.set(key, { ...tempRule, ...rule })\r\n    return\r\n  }\r\n  store.set(key, rule)\r\n}\r\nexport function deleteRule(key: string) {\r\n  store.delete(key)\r\n}\r\nexport function disableRule(key: string) {\r\n  const tempRule = store.get(key);\r\n  if (tempRule) {\r\n    tempRule.disabled = true\r\n  }\r\n}\r\nexport function enableRule(key: string) {\r\n  const tempRule = store.get(key);\r\n  if (tempRule) {\r\n    tempRule.disabled = false\r\n  }\r\n}\r\nexport function getRule(key: string) {\r\n  return store.get(key)\r\n}\r\n\r\nexport function getRuleByUrl(url: string) {\r\n  const urlObj = new URL(url);\r\n  const pathNames = urlObj.pathname;\r\n  return [...store.values()].find(rule => {\r\n    return pathNames.includes(rule.request.url)\r\n  })\r\n}\r\n\r\nexport function query(queryList: string[]) {\r\n  return micromatch([...store.keys()], queryList)\r\n}\r\n\r\n","import chokidar from 'chokidar';\r\nimport fs from 'fs';\r\nimport YAML from 'js-yaml';\r\nimport path from 'path';\r\nimport { addRule, deleteRule, getRule, query, disableRule, enableRule } from './rule';\r\nexport { getRuleByUrl, getRule } from './rule'\r\nimport { addFunction } from '@zhangxin/mock-monkey-core';\r\nimport findup from 'findup-sync';\r\nimport micromatch from 'micromatch';\r\nimport { Rule } from './interface';\r\n\r\nlet currentWatcher: chokidar.FSWatcher\r\nexport async function watch(watchPath: string) {\r\n  if (currentWatcher) {\r\n    await currentWatcher.close()\r\n  }\r\n  if (!fs.existsSync(watchPath)) throw Error('path not exist')\r\n  currentWatcher = chokidar.watch(watchPath).on('all', (eventName, _path) => {\r\n    queue(\r\n      [handleJSFile, handleYAMLFile, handleIgnore],\r\n      [eventName, _path.replace(/[\\\\]/g, '/'), watchPath.replace(/[\\\\]/g, '/')]\r\n    )\r\n  });\r\n}\r\n\r\nfunction getObjFromYAML(filePath: string) {\r\n  let parsedJSON = {request:{url:'',body:{}},response:{body:{}}} as Partial<Rule>\r\n  try {\r\n    const content = fs.readFileSync(filePath, { encoding: 'utf-8' });\r\n    const parsedYaml = YAML.load(content) as Partial<Rule>\r\n    if (!parsedYaml) throw Error('文件内容不能为空')\r\n    // 把合法的json转换为合法yaml\r\n    if(!parsedYaml.request){\r\n      parsedJSON = formatJsonToYAML(content)\r\n      fs.writeFileSync(filePath, YAML.dump({...parsedJSON }), { encoding: 'utf-8' })\r\n      return parsedJSON\r\n    }\r\n    return parsedYaml\r\n  } catch (error) {\r\n    console.log(error);\r\n    fs.writeFileSync(filePath, YAML.dump(parsedJSON), { encoding: 'utf-8' })\r\n    return {};\r\n  }\r\n}\r\n// 把json转换为yaml。不catch错误。\r\nfunction formatJsonToYAML(content: string) {\r\n  const contentWithoutDocs = content.replace(/\\/\\/[\\s\\S]*/g, '')\r\n  console.log(contentWithoutDocs , 'contentWithoutDocs');\r\n  const parsed = JSON.parse(contentWithoutDocs)\r\n  // 有符合定义的结构体，就不覆盖用户之前输入了\r\n  if (parsed?.request) {\r\n    return {}\r\n  }\r\n  // 没有符合定义的结构体，说明试复制来的后端json对象\r\n  return {\r\n    request: { url: '',body:{} },\r\n    response: {\r\n      body: parsed\r\n    }\r\n  }\r\n}\r\n\r\nfunction addFile(filePath: string) {\r\n  addRule(filePath, { ...getObjFromYAML(filePath), filePath, disabled: false } as Rule);\r\n}\r\nfunction updateFile(filePath: string) {\r\n  addRule(filePath, getObjFromYAML(filePath) as Rule);\r\n}\r\nfunction deleteFile(filePath: string) {\r\n  deleteRule(filePath);\r\n}\r\n\r\n\r\n\r\nasync function queue(funcs: Function[], params: any[]) {\r\n  for (const func of funcs) {\r\n    await func(...params)\r\n  }\r\n}\r\n\r\nfunction getIgnoreRules(dir: string, root: string) {\r\n  const ignoreFilePath = findup('.ignore', { cwd: dir })\r\n  let ignoreRules = [] as string[]\r\n  if (ignoreFilePath) {\r\n    ignoreRules = fs.readFileSync(ignoreFilePath, { encoding: 'utf-8' })\r\n      .split('\\n')\r\n      .filter(text => !text.startsWith('// '))\r\n      .map(text => {\r\n        const prefixPath = `${path.parse(ignoreFilePath.replace(/[\\\\]/g, '/')).dir}`.replace(root, '**')\r\n        return `${prefixPath}/${text.replace(/[\\s]*/g, '')}`\r\n      })\r\n  }\r\n  return ignoreRules\r\n}\r\n\r\nasync function handleJSFile(eventName: 'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir', _path: string) {\r\n  const parsedPath = path.parse(_path)\r\n  if (parsedPath.ext === '.js' && ['add', 'change'].includes(eventName)) {\r\n    const i18n = {\r\n      add: '添加',\r\n      change: '更新',\r\n      unlinkDir: '',\r\n      unlink: '',\r\n      addDir: ''\r\n    }\r\n    try {\r\n      if (eventName === 'change') delete require.cache[_path]\r\n      const mod = require(_path)\r\n      Object.keys(mod).forEach((key) => {\r\n        addFunction(key, mod[key])\r\n      })\r\n      global.sendLog({ message: `${i18n[eventName]}了函数<span class=\"text-pink-500\">${_path}</span>`, date: new Date().valueOf(), type: 'success', tags: ['添加', '函数'] })\r\n    } catch (error) {\r\n      global.sendLog({ message: `${i18n[eventName]}函数<span class=\"text-pink-500\">${_path}</span>失败，${error.message}`, date: new Date().valueOf(), type: 'success', tags: ['添加', '函数'] })\r\n    }\r\n  }\r\n}\r\n\r\nasync function handleYAMLFile(eventName: 'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir', _path: string, root: string) {\r\n  const parsedPath = path.parse(_path)\r\n  if (parsedPath.ext !== '.yaml') return\r\n  if (eventName === 'add') {\r\n    try {\r\n      addFile(_path);\r\n      const ignoreRules = getIgnoreRules(parsedPath.dir, root)\r\n      if (micromatch.isMatch(_path, ignoreRules)) {\r\n        disableRule(_path)\r\n        global.sendLog({ message: `禁用了模板<span class=\"text-pink-500\">${_path}</span>`, date: new Date().valueOf(), type: 'warning', tags: ['禁用'] })\r\n        return\r\n      }\r\n      global.sendLog({ message: `添加了模板<span class=\"text-pink-500\">${_path}</span>`, date: new Date().valueOf(), type: 'success', tags: ['添加'] })\r\n    } catch (error) {\r\n      global.sendLog({ message: `添加模板<span class=\"text-pink-500\">${_path}</span>失败,${error.message}`, date: new Date().valueOf(), type: 'error' })\r\n    }\r\n  }\r\n  if (eventName === 'change') {\r\n    try {\r\n      updateFile(_path);\r\n      global.sendLog({ date: new Date().valueOf(), message: `更新了模板<span class=\"text-pink-500\">${_path}</span>`, type: 'success', tags: ['更新'] })\r\n    } catch (error) {\r\n      global.sendLog({ message: `更新模板<span class=\"text-pink-500\">${_path}</span>失败`, date: new Date().valueOf(), type: 'error' })\r\n    }\r\n  }\r\n  if (eventName === 'unlinkDir') {\r\n    query([`${_path}/*`]).forEach((filePath) => {\r\n      deleteRule(filePath)\r\n      global.sendLog({ message: `禁用了模板<span class=\"text-pink-500\">${_path}</span>`, date: new Date().valueOf(), type: 'warning', tags: ['禁用'] })\r\n    })\r\n  }\r\n  if (eventName === 'unlink') {\r\n    deleteFile(_path);\r\n    global.sendLog({ date: new Date().valueOf(), message: `删除了模板<span class=\"text-pink-500\">${_path}</span>`, type: 'success', tags: ['删除'] })\r\n  }\r\n}\r\n\r\nasync function handleIgnore(_eventName: 'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir', _path: string, root: string) {\r\n  const parsedPath = path.parse(_path)\r\n  if (parsedPath.name === '.ignore') {\r\n    const ignoreRules = getIgnoreRules(parsedPath.dir, root)\r\n    query(['**']).forEach((filePath) => {\r\n      const rule = getRule(filePath)\r\n      if (rule?.disabled === true && !micromatch.isMatch(filePath, ignoreRules)) {\r\n        enableRule(filePath)\r\n        global.sendLog({ message: `启用了模板<span class=\"text-pink-500\">${filePath}</span>`, date: new Date().valueOf(), type: 'success', tags: ['启用'] })\r\n        return\r\n      }\r\n      if (rule?.disabled === false && micromatch.isMatch(filePath, ignoreRules)) {\r\n        disableRule(filePath)\r\n        global.sendLog({ message: `禁用了模板<span class=\"text-pink-500\">${filePath}</span>`, date: new Date().valueOf(), type: 'warning', tags: ['禁用'] })\r\n      }\r\n    })\r\n  }\r\n}","import Koa from 'koa';\r\nimport Router from '@koa/router';\r\n// @ts-ignore\r\nimport cors from '@koa/cors';\r\nimport { watch } from '../file/index';\r\nimport body from 'koa-body';\r\nimport send from 'koa-send';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\n// @ts-ignore\r\nimport { Server } from 'ws';\r\nimport { Log } from '../interface/log';\r\n\r\nconst app = new Koa();\r\nconst router = new Router();\r\n\r\n\r\nrouter.post('/cgi-bin/root', async (ctx) => {\r\n  const body = ctx.request.body;\r\n  if (!body.path) {\r\n    ctx.response.status = 500;\r\n    ctx.response.message = 'do not find property \"path\"';\r\n    return;\r\n  }\r\n  try {\r\n    const config = JSON.parse(fs.readFileSync('./config.json', { encoding: 'utf-8' }))\r\n    config.root = body.path\r\n    fs.writeFileSync('./config.json', JSON.stringify(config), { encoding: 'utf-8' })\r\n    await watch(body.path);\r\n    ctx.response.status = 200;\r\n    ctx.response.body = JSON.stringify({ path: body.path })\r\n  } catch (error) {\r\n    ctx.response.status = 500;\r\n    ctx.response.message = error.message;\r\n  }\r\n});\r\nrouter.get('/cgi-bin/root', async (ctx) => {\r\n  const { root } = JSON.parse(fs.readFileSync('./config.json', { encoding: 'utf-8' }))\r\n  ctx.response.status = 200;\r\n  ctx.response.body = JSON.stringify({ path: root })\r\n});\r\n\r\napp.proxy = true;\r\napp.silent = true;\r\napp\r\n  .use(body())\r\n  .use(cors({ credentials: true }))\r\n  .use(router.routes())\r\n  .use(router.allowedMethods())\r\n  .use(async (ctx) => {\r\n    const root = path.resolve(__dirname, '../public')\r\n    const parsedPath = path.parse(ctx.path);\r\n    if (ctx.path === '/plugin.monkey/') {\r\n      await send(ctx, './index.html', { root });\r\n      return;\r\n    }\r\n    if (parsedPath.ext !== '') {\r\n      const isExist = fs.existsSync(`${root}${ctx.path}`);\r\n      if (isExist) {\r\n        await send(ctx, `.${ctx.path}`, { root });\r\n        return;\r\n      }\r\n      ctx.response.status = 500;\r\n      ctx.response.message = 'file not found';\r\n      return;\r\n    }\r\n    await send(ctx, './index.html', { root });\r\n  })\r\n\r\nlet hasInit = false\r\nexport default (server: any) => {\r\n  if (!fs.existsSync('./config.json')) {\r\n    fs.writeFileSync('./config.json', JSON.stringify({ root: '' }), { encoding: 'utf-8' })\r\n  }\r\n  server.on('request', app.callback());\r\n  const wss = new Server({ port: 9999 });\r\n  wss.on('connection', function (_ws: any) {\r\n    global.sendLog = (log: Log) => {\r\n      _ws.send(JSON.stringify(log))\r\n    }\r\n    if (!hasInit) {\r\n      const { root } = JSON.parse(fs.readFileSync('./config.json', { encoding: 'utf-8' }))\r\n      if (root) {\r\n        watch(root)\r\n        hasInit = true\r\n      }\r\n    }\r\n  });\r\n\r\n};\r\n","import Koa from 'koa';\r\nimport {getRuleByUrl} from '../file/index';\r\n\r\nexport default (server:any) => {\r\n  const app = new Koa();\r\n  app.proxy = true;\r\n  app.silent = true;\r\n  app.use((ctx) => {\r\n    const href = ctx.request.href\r\n    const rule = getRuleByUrl(href)\r\n    if(rule){\r\n      const sendStr = encodeURIComponent(rule.filePath)\r\n      ctx.body = `* monkey://${sendStr}`\r\n    } else {\r\n      ctx.body = `${href} ${href}`\r\n    }\r\n  })\r\n  server.on('request', app.callback());\r\n};\r\n","import { getRule } from '../file/index';\r\nimport {generate, getValueByStatement} from '@zhangxin/mock-monkey-core';\r\n\r\nfunction isMatch(statement:string, val:any,scope:any){\r\n  const result = getValueByStatement(statement, scope)\r\n  if(typeof result === 'function'){\r\n    return result(val)\r\n  }\r\n  return val === result\r\n}\r\n\r\nexport function isContain(father: any, child: any, scope:any):boolean {\r\n  if(!child) return true\r\n  if (father === child) return true;\r\n  if(typeof child === 'string'){\r\n    return isMatch(child, father, scope)\r\n  }\r\n  if (typeof father !== 'object' || typeof child !== 'object') return false;\r\n  if(Array.isArray(father) && Array.isArray(child)) {\r\n    child.every((i) => {\r\n      if(typeof i !== 'object') return father.includes(i)\r\n      return father.some((fj) => {\r\n        isContain(fj, i, scope)\r\n      })\r\n    })\r\n  }\r\n  return Object.keys(child).every((childKey) =>{\r\n    const childItem = child[childKey]\r\n    const fatherItem = father[childKey]\r\n    if(!fatherItem) return false\r\n    return isContain(fatherItem, childItem, scope)\r\n  })\r\n}\r\n\r\nexport default (server: any) => {\r\n  server.on('request', (req: any, res: any) => {\r\n    const filePath = decodeURIComponent(req.originalReq.ruleValue);\r\n    const rule = getRule(filePath);\r\n    if (filePath) {\r\n      let data = '';\r\n      req.on('data', (chunk: any) => {\r\n        data += chunk.toString('utf-8');\r\n      });\r\n      req.on('end', () => {\r\n        if (!data) {\r\n          data = '{}';\r\n        }\r\n        try {\r\n          const url = new URL(req.url, `http://${req.headers.host}`);\r\n          const queryData: { [key: string]: any } = {};\r\n          url.searchParams.forEach((val, key) => {\r\n            queryData[key] = val;\r\n          });\r\n          const requestData = { ...JSON.parse(data), ...queryData };\r\n          const isFileMatch = isContain(requestData, rule?.request?.body, requestData);\r\n          if (!isFileMatch) {\r\n            req.passThrough();\r\n            return;\r\n          }\r\n          res.setHeader('Access-Control-Allow-Credentials', 'true');\r\n          res.setHeader('Access-Control-Allow-Origin', req.headers['origin']);\r\n          res.setHeader('Content-Type', 'application/json');\r\n          const body = generate(rule?.response?.body, requestData);\r\n          // if (typeof template.delay === 'number') {\r\n          //   setTimeout(() => {\r\n          //     res.end(JSON.stringify(body), 'utf-8');\r\n          //   }, template.delay);\r\n          //   return;\r\n          // }\r\n          res.end(JSON.stringify(body), 'utf-8');\r\n          global.sendLog({\r\n            type:'success',\r\n            message:`请求<span class=\"text-purple-500\">${url.pathname}</span>命中文件<span class=\"text-pink-500\">${filePath}</span>`,\r\n            date: new Date().valueOf(),\r\n            tags:['命中']\r\n          })\r\n        } catch (error) {\r\n          res.setHeader('Content-Type', 'text/plain');\r\n          res.end(error.message, 'utf-8');\r\n          console.log(error);\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n"],"names":["store","Map","addRule","key","rule","Error","request","_rule$request","url","set","deleteRule","delete","disableRule","tempRule","get","disabled","getRule","query","queryList","micromatch","keys","currentWatcher","async","watch","watchPath","close","fs","existsSync","chokidar","on","eventName","_path","funcs","params","func","queue","handleJSFile","handleYAMLFile","handleIgnore","replace","getObjFromYAML","filePath","parsedJSON","body","response","content","readFileSync","encoding","parsedYaml","YAML","load","contentWithoutDocs","console","log","parsed","JSON","parse","formatJsonToYAML","writeFileSync","dump","error","getIgnoreRules","dir","root","ignoreFilePath","findup","cwd","ignoreRules","split","filter","text","startsWith","map","path","ext","includes","i18n","add","change","unlinkDir","unlink","addDir","require","cache","mod","Object","forEach","addFunction","global","sendLog","message","date","Date","valueOf","type","tags","parsedPath","isMatch","updateFile","deleteFile","_eventName","name","enableRule","app","Koa","router","Router","post","ctx","status","config","stringify","proxy","silent","use","cors","credentials","routes","allowedMethods","resolve","__dirname","send","hasInit","server","href","pathNames","URL","pathname","values","find","getRuleByUrl","sendStr","encodeURIComponent","callback","req","res","decodeURIComponent","originalReq","ruleValue","data","chunk","toString","headers","host","queryData","searchParams","val","requestData","isContain","father","child","scope","statement","result","getValueByStatement","Array","isArray","every","i","some","fj","childKey","fatherItem","passThrough","setHeader","generate","_rule$response","end","Server","port","_ws"],"mappings":"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"}