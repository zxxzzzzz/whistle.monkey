"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});var n=e(require("koa")),t=e(require("chokidar")),s=e(require("fs")),a=e(require("micromatch")),r=e(require("path")),o=e(require("js-yaml")),i=require("@zhangxin/mock-monkey-core"),c=e(require("findup-sync")),l=e(require("@koa/router")),u=e(require("@koa/cors")),p=e(require("koa-body")),d=e(require("koa-send")),g=require("ws");const f=new Map;function y(e,n){var t;if(!n)throw Error("rule不能为空");if(null==n||null==(t=n.request)||!t.url)throw Error("request的url不能为空");f.set(e,n)}function h(e,n){if(!n)throw Error("rule不能为空");const t=f.get(e);f.set(e,t?{...t,...n}:n)}function m(e){f.delete(e)}function x(e){const n=f.get(e);n&&(n.disabled=!0)}function b(e){const n=f.get(e);n&&(n.disabled=!1)}function w(e){return f.get(e)}function k(e){return a([...f.keys()],e)}async function $(e){const{_path:n,eventName:t}=e,a=r.parse(n);if(!["add","change"].includes(t))return"next";if(".yaml"!==a.ext)return"next";let i={request:{url:r.parse(n).name,body:{}},response:{body:{}}};const c=s.readFileSync(n,{encoding:"utf-8"});if(""!==c){try{const e=function(e,n){const t=e.replace(/\/\/[^\n\r]*/g,""),s=JSON.parse(t);return null!=s&&s.request?s:{...n,response:{body:s}}}(c,i);return void s.writeFileSync(n,o.dump(e),{encoding:"utf-8"})}catch(e){}try{return e.rule=o.load(c),"next"}catch(e){global.sendLog({message:`${n}文件有格式问题<span class="text-pink-500">${e.message}</span>`,type:"error",tags:["yaml","格式"]})}}else s.writeFileSync(n,o.dump({...i}),{encoding:"utf-8"})}async function q(e){const{_path:n,eventName:t}=e;if(".js"!==r.parse(n).ext||!["add","change"].includes(t))return"next";const s={add:"添加",change:"更新",unlinkDir:"",unlink:"",addDir:""};try{"change"===t&&delete require.cache[n];const e=require(n);Object.keys(e).forEach(n=>{i.addFunction(n,e[n])}),global.sendLog({message:`${s[t]}了函数<span class="text-pink-500">${n}</span>`,type:"success",tags:["添加","函数"]})}catch(e){global.sendLog({message:`${s[t]}函数<span class="text-pink-500">${n}</span>失败，${e.message}`,type:"success",tags:["添加","函数"]})}}function v(e,n){const t=c(".ignore",{cwd:e});let a=[];return t&&(a=s.readFileSync(t,{encoding:"utf-8"}).split("\n").filter(e=>!e.startsWith("// ")).map(e=>`${(""+r.parse(t.replace(/[\\]/g,"/")).dir).replace(n,"**")}/${e.replace(/[\s]*/g,"")}`)),a}async function S(e){const{_path:n,eventName:t,root:s}=e,o=r.parse(n);if(".yaml"!==o.ext)return"next";if("add"===t)try{y(n,{...e.rule,filePath:n,disabled:!1});const t=v(o.dir,s);if(a.isMatch(n,t))return x(n),void global.sendLog({message:`禁用了模板<span class="text-pink-500">${n}</span>`,type:"warning",tags:["禁用"]});global.sendLog({message:`添加了模板<span class="text-pink-500">${n}</span>`,type:"success",tags:["添加"]})}catch(e){global.sendLog({message:`添加模板<span class="text-pink-500">${n}</span>失败,${e.message}`,type:"error"})}if("change"===t)try{h(n,e.rule),global.sendLog({message:`更新了模板<span class="text-pink-500">${n}</span>`,type:"success",tags:["更新"]})}catch(e){global.sendLog({message:`更新模板<span class="text-pink-500">${n}</span>失败`,type:"error"})}"unlinkDir"===t&&k([n+"/*"]).forEach(e=>{m(e),global.sendLog({message:`删除了模板<span class="text-pink-500">${n}</span>`,type:"warning",tags:["禁用"]})}),"unlink"===t&&(m(n),global.sendLog({message:`删除了模板<span class="text-pink-500">${n}</span>`,type:"success",tags:["删除"]}))}async function L(e){const{_path:n,root:t}=e,s=r.parse(n);if(".ignore"===s.name){const e=v(s.dir,t);k(["**"]).forEach(n=>{const t=w(n);if(!0===(null==t?void 0:t.disabled)&&!a.isMatch(n,e))return b(n),void global.sendLog({message:`启用了模板<span class="text-pink-500">${n}</span>`,type:"success",tags:["启用"]});!1===(null==t?void 0:t.disabled)&&a.isMatch(n,e)&&(x(n),global.sendLog({message:`禁用了模板<span class="text-pink-500">${n}</span>`,type:"warning",tags:["禁用"]}))})}}let O;async function N(e){if(O&&await O.close(),!s.existsSync(e))throw Error("path not exist");O=t.watch(e).on("all",(n,t)=>{!async function(e,n){if(!e.length)return;const t=n;for(const n of e)if("next"!==await n(t))break}([$,q,S,L],{eventName:n,_path:t.replace(/[\\]/g,"/"),root:e.replace(/[\\]/g,"/"),content:""})})}function R(e,n){return n.setHeader("Access-Control-Allow-Credentials","true"),n.setHeader("Access-Control-Allow-Origin",e.headers.origin||""),n.setHeader("Content-Type","application/json"),"next"}function j(e,n,t,s){var a;const r=decodeURIComponent(e.originalReq.ruleValue),o=i.generate(null==t||null==(a=t.response)?void 0:a.body,s),c=new URL(e.url||"","http://"+e.headers.host);n.end(JSON.stringify(o),"utf-8"),global.sendLog({type:"success",message:`请求<span class="text-purple-500">${c.pathname}</span>命中文件<span class="text-pink-500">${r}</span>`,tags:["命中"]})}function J(e,n,t,s){if("number"!=typeof(null==t?void 0:t.delay))return"next";{var a;const r=i.generate(null==t||null==(a=t.response)?void 0:a.body,s),o=new URL(e.url||"","http://"+e.headers.host),c=decodeURIComponent(e.originalReq.ruleValue);setTimeout(()=>{n.end(JSON.stringify(r),"utf-8"),global.sendLog({type:"success",message:`请求<span class="text-purple-500">${o.pathname}\n          </span>延迟${t.delay}ms, 命中文件<span class="text-pink-500">${c}</span>`,tags:["命中"]})},t.delay)}}function E(e,n,t,s){try{var a;!function(e,n,t){if(null==n)return!0;if(null==e)throw Error("入参不存在，但是却配置了入参验证, 所以请求失败");Object.keys(n).forEach(s=>{if(!1===function(e,n,t){const s=i.getValueByStatement(e,t);return"function"==typeof s&&s(n),n===s}(n[s],e[s],t))throw Error(`入参字段 ${s} 不符合判定规则`)})}(s,null==t||null==(a=t.request)?void 0:a.body,s)}catch(t){n.statusCode=400,n.statusMessage=t.message,n.end(JSON.stringify({code:400,message:t.message}),"utf-8");const s=decodeURIComponent(e.originalReq.ruleValue),a=new URL(e.url||"","http://"+e.headers.host);return void global.sendLog({type:"error",message:`请求<span class="text-purple-500">${a.pathname}</span>命中文件<span class="text-pink-500">${s}</span>,但是参数有问题`,tags:["命中","入参"]})}return"next"}const C=new n,F=new l;F.post("/cgi-bin/root",async e=>{const n=e.request.body;if(!n.path)return e.response.status=500,void(e.response.message='do not find property "path"');try{const t=JSON.parse(s.readFileSync("./config.json",{encoding:"utf-8"}));t.root=n.path,s.writeFileSync("./config.json",JSON.stringify(t),{encoding:"utf-8"}),await N(n.path),e.response.status=200,e.response.body=JSON.stringify({path:n.path})}catch(n){e.response.status=500,e.response.message=n.message}}),F.get("/cgi-bin/root",async e=>{const{root:n}=JSON.parse(s.readFileSync("./config.json",{encoding:"utf-8"}));e.response.status=200,e.response.body=JSON.stringify({path:n})}),C.proxy=!0,C.silent=!0,C.use(p()).use(u({credentials:!0})).use(F.routes()).use(F.allowedMethods()).use(async e=>{const n=r.resolve(__dirname,"../public"),t=r.parse(e.path);if("/plugin.monkey/"!==e.path){if(""!==t.ext)return s.existsSync(`${n}${e.path}`)?void await d(e,"."+e.path,{root:n}):(e.response.status=500,void(e.response.message="file not found"));await d(e,"./index.html",{root:n})}else await d(e,"./index.html",{root:n})});let U=!1;exports.rulesServer=e=>{const t=new n;t.proxy=!0,t.silent=!0,t.use(e=>{const n=e.request.href,t=function(e){const n=new URL(e).pathname;return[...f.values()].find(e=>n.includes(e.request.url))}(n);if(t){const n=encodeURIComponent(t.filePath);e.body="* monkey://"+n}else e.body=`${n} ${n}`}),e.on("request",t.callback())},exports.server=e=>{e.on("request",(e,n)=>{const t=decodeURIComponent(e.originalReq.ruleValue),s=w(t);if(t){let t="";e.on("data",e=>{t+=e.toString("utf-8")}),e.on("end",()=>{t||(t="{}");try{const a=new URL(e.url||"","http://"+e.headers.host),r={};a.searchParams.forEach((e,n)=>{r[n]=e});const o={...JSON.parse(t),...r};!function(e,n){let t=!1;[R,E,J,j].forEach(e=>{t||(t="next"!==e(...n))})}(0,[e,n,s,o])}catch(e){n.setHeader("Content-Type","text/plain"),n.end(e.message,"utf-8"),console.log(e)}})}})},exports.uiServer=e=>{s.existsSync("./config.json")||s.writeFileSync("./config.json",JSON.stringify({root:""}),{encoding:"utf-8"}),e.on("request",C.callback()),new g.Server({port:9999}).on("connection",(async function(e){if(global.sendLog=n=>{n.date||(n.date=(new Date).valueOf()),e.send(JSON.stringify(n))},!U){const{root:e}=JSON.parse(s.readFileSync("./config.json",{encoding:"utf-8"}));if(e){try{await N(e)}catch(e){sendLog({type:"error",message:e.message,tags:["路径"]})}U=!0}}}))};
//# sourceMappingURL=whistle.monkey.cjs.production.min.js.map
