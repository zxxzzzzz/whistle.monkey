"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});var n=e(require("koa")),t=e(require("chokidar")),s=e(require("fs")),a=e(require("js-yaml")),o=e(require("path")),r=e(require("micromatch")),i=require("@zhangxin/mock-monkey-core"),c=e(require("findup-sync")),l=e(require("@koa/router")),u=e(require("@koa/cors")),d=e(require("koa-body")),p=e(require("koa-send")),g=require("ws");const f=new Map;function y(e,n){var t;if(!n)throw Error("rule不能为空");if(null==n||null==(t=n.request)||!t.url)throw Error("request的url不能为空");f.set(e,n)}function h(e){f.delete(e)}function m(e){const n=f.get(e);n&&(n.disabled=!0)}function w(e){return f.get(e)}function x(e){return r([...f.keys()],e)}let b;async function v(e){if(b&&await b.close(),!s.existsSync(e))throw Error("path not exist");b=t.watch(e).on("all",(n,t)=>{!async function(e,n){for(const t of e)if("next"!==await t(...n))break}([L,O,q,$],[n,t.replace(/[\\]/g,"/"),e.replace(/[\\]/g,"/")])})}function k(e){const n=s.readFileSync(e,{encoding:"utf-8"});return a.load(n)}async function O(e,n){if(".js"!==o.parse(n).ext||!["add","change"].includes(e))return"next";const t={add:"添加",change:"更新",unlinkDir:"",unlink:"",addDir:""};try{"change"===e&&delete require.cache[n];const s=require(n);Object.keys(s).forEach(e=>{i.addFunction(e,s[e])}),global.sendLog({message:`${t[e]}了函数<span class="text-pink-500">${n}</span>`,date:(new Date).valueOf(),type:"success",tags:["添加","函数"]})}catch(s){global.sendLog({message:`${t[e]}函数<span class="text-pink-500">${n}</span>失败，${s.message}`,date:(new Date).valueOf(),type:"success",tags:["添加","函数"]})}}async function q(e,n,t){const s=o.parse(n);if(".yaml"!==s.ext)return"next";if("add"===e)try{y(a=n,{...k(a),filePath:a,disabled:!1});const e=S(s.dir,t);if(r.isMatch(n,e))return m(n),void global.sendLog({message:`禁用了模板<span class="text-pink-500">${n}</span>`,date:(new Date).valueOf(),type:"warning",tags:["禁用"]});global.sendLog({message:`添加了模板<span class="text-pink-500">${n}</span>`,date:(new Date).valueOf(),type:"success",tags:["添加"]})}catch(e){global.sendLog({message:`添加模板<span class="text-pink-500">${n}</span>失败,${e.message}`,date:(new Date).valueOf(),type:"error"})}var a;if("change"===e)try{!function(e){y(e,k(e))}(n),global.sendLog({date:(new Date).valueOf(),message:`更新了模板<span class="text-pink-500">${n}</span>`,type:"success",tags:["更新"]})}catch(e){global.sendLog({message:`更新模板<span class="text-pink-500">${n}</span>失败`,date:(new Date).valueOf(),type:"error"})}"unlinkDir"===e&&x([n+"/*"]).forEach(e=>{h(e),global.sendLog({message:`删除了模板<span class="text-pink-500">${n}</span>`,date:(new Date).valueOf(),type:"warning",tags:["禁用"]})}),"unlink"===e&&(function(e){h(e)}(n),global.sendLog({date:(new Date).valueOf(),message:`删除了模板<span class="text-pink-500">${n}</span>`,type:"success",tags:["删除"]}))}function S(e,n){const t=c(".ignore",{cwd:e});let a=[];return t&&(a=s.readFileSync(t,{encoding:"utf-8"}).split("\n").filter(e=>!e.startsWith("// ")).map(e=>`${(""+o.parse(t.replace(/[\\]/g,"/")).dir).replace(n,"**")}/${e.replace(/[\s]*/g,"")}`)),a}async function $(e,n,t){const s=o.parse(n);if(".ignore"===s.name){const e=S(s.dir,t);x(["**"]).forEach(n=>{const t=w(n);if(!0===(null==t?void 0:t.disabled)&&!r.isMatch(n,e))return function(e){const n=f.get(e);n&&(n.disabled=!1)}(n),void global.sendLog({message:`启用了模板<span class="text-pink-500">${n}</span>`,date:(new Date).valueOf(),type:"success",tags:["启用"]});!1===(null==t?void 0:t.disabled)&&r.isMatch(n,e)&&(m(n),global.sendLog({message:`禁用了模板<span class="text-pink-500">${n}</span>`,date:(new Date).valueOf(),type:"warning",tags:["禁用"]}))})}}async function L(e,n){const t=o.parse(n);if(!["add","change"].includes(e))return"next";if(".yaml"!==t.ext)return"next";const r=s.readFileSync(n,{encoding:"utf-8"});if(""!==r){try{const e=function(e){const n=e.replace(/\/\/[^\n\r]*/g,"");console.log(n);const t=JSON.parse(n);return null!=t&&t.request?t:{request:{url:"",body:{}},response:{body:t}}}(r);return void s.writeFileSync(n,a.dump(e),{encoding:"utf-8"})}catch(e){}try{return a.load(r),"next"}catch(e){}}else s.writeFileSync(n,a.dump({request:{url:"",body:{}},response:{body:{}}}),{encoding:"utf-8"})}function D(e,n,t,s){if("number"!=typeof(null==t?void 0:t.delay))return"next";{var a;const o=i.generate(null==t||null==(a=t.response)?void 0:a.body,s),r=new URL(e.url||"","http://"+e.headers.host),c=decodeURIComponent(e.originalReq.ruleValue);setTimeout(()=>{n.end(JSON.stringify(o),"utf-8"),global.sendLog({type:"success",message:`请求<span class="text-purple-500">${r.pathname}\n          </span>延迟${t.delay}ms, 命中文件<span class="text-pink-500">${c}</span>`,date:(new Date).valueOf(),tags:["命中"]})},t.delay)}}function R(e,n){return n.setHeader("Access-Control-Allow-Credentials","true"),n.setHeader("Access-Control-Allow-Origin",e.headers.origin||""),n.setHeader("Content-Type","application/json"),"next"}function j(e,n,t,s){try{var a;!function(e,n,t){if(null==n)return!0;if(null==e)throw Error("入参不存在，但是却配置了入参验证, 所以请求失败");Object.keys(n).forEach(s=>{if(!1===function(e,n,t){const s=i.getValueByStatement(e,t);return"function"==typeof s&&s(n),n===s}(n[s],e[s],t))throw Error(`入参字段 ${s} 不符合判定规则`)})}(s,null==t||null==(a=t.request)?void 0:a.body,s)}catch(t){n.statusCode=400,n.statusMessage=t.message,n.end(JSON.stringify({code:400,message:t.message}),"utf-8");const s=decodeURIComponent(e.originalReq.ruleValue),a=new URL(e.url||"","http://"+e.headers.host);return void global.sendLog({type:"error",message:`请求<span class="text-purple-500">${a.pathname}</span>命中文件<span class="text-pink-500">${s}</span>,但是参数有问题`,date:(new Date).valueOf(),tags:["命中","入参"]})}return"next"}function J(e,n,t,s){var a;const o=decodeURIComponent(e.originalReq.ruleValue),r=i.generate(null==t||null==(a=t.response)?void 0:a.body,s),c=new URL(e.url||"","http://"+e.headers.host);n.end(JSON.stringify(r),"utf-8"),global.sendLog({type:"success",message:`请求<span class="text-purple-500">${c.pathname}</span>命中文件<span class="text-pink-500">${o}</span>`,date:(new Date).valueOf(),tags:["命中"]})}const N=new n,C=new l;C.post("/cgi-bin/root",async e=>{const n=e.request.body;if(!n.path)return e.response.status=500,void(e.response.message='do not find property "path"');try{const t=JSON.parse(s.readFileSync("./config.json",{encoding:"utf-8"}));t.root=n.path,s.writeFileSync("./config.json",JSON.stringify(t),{encoding:"utf-8"}),await v(n.path),e.response.status=200,e.response.body=JSON.stringify({path:n.path})}catch(n){e.response.status=500,e.response.message=n.message}}),C.get("/cgi-bin/root",async e=>{const{root:n}=JSON.parse(s.readFileSync("./config.json",{encoding:"utf-8"}));e.response.status=200,e.response.body=JSON.stringify({path:n})}),N.proxy=!0,N.silent=!0,N.use(d()).use(u({credentials:!0})).use(C.routes()).use(C.allowedMethods()).use(async e=>{const n=o.resolve(__dirname,"../public"),t=o.parse(e.path);if("/plugin.monkey/"!==e.path){if(""!==t.ext)return s.existsSync(`${n}${e.path}`)?void await p(e,"."+e.path,{root:n}):(e.response.status=500,void(e.response.message="file not found"));await p(e,"./index.html",{root:n})}else await p(e,"./index.html",{root:n})});let E=!1;exports.rulesServer=e=>{const t=new n;t.proxy=!0,t.silent=!0,t.use(e=>{const n=e.request.href,t=function(e){const n=new URL(e).pathname;return[...f.values()].find(e=>n.includes(e.request.url))}(n);if(t){const n=encodeURIComponent(t.filePath);e.body="* monkey://"+n}else e.body=`${n} ${n}`}),e.on("request",t.callback())},exports.server=e=>{e.on("request",(e,n)=>{const t=decodeURIComponent(e.originalReq.ruleValue),s=w(t);if(t){let t="";e.on("data",e=>{t+=e.toString("utf-8")}),e.on("end",()=>{t||(t="{}");try{const a=new URL(e.url||"","http://"+e.headers.host),o={};a.searchParams.forEach((e,n)=>{o[n]=e});const r={...JSON.parse(t),...o};!function(e,n){let t=!1;[R,j,D,J].forEach(e=>{t||(t="next"!==e(...n))})}(0,[e,n,s,r])}catch(e){n.setHeader("Content-Type","text/plain"),n.end(e.message,"utf-8"),console.log(e)}})}})},exports.uiServer=e=>{s.existsSync("./config.json")||s.writeFileSync("./config.json",JSON.stringify({root:""}),{encoding:"utf-8"}),e.on("request",N.callback()),new g.Server({port:9999}).on("connection",(async function(e){if(global.sendLog=n=>{e.send(JSON.stringify(n))},!E){const{root:e}=JSON.parse(s.readFileSync("./config.json",{encoding:"utf-8"}));if(e){try{await v(e)}catch(e){sendLog({type:"error",message:e.message,date:(new Date).valueOf(),tags:["路径"]})}E=!0}}}))};
//# sourceMappingURL=whistle.monkey.cjs.production.min.js.map
