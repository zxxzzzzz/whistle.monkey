{"version":3,"file":"whistle.monkey.cjs.development.js","sources":["../src/file/rule.ts","../src/file/index.ts","../src/whistleServer/rulesServer.ts","../src/utils/match.ts","../src/whistleServer/server.ts","../src/whistleServer/ui.ts"],"sourcesContent":["import { Rule } from './interface';\r\nimport micromatch from 'micromatch';\r\n\r\nconst store = new Map<string, Rule>()\r\n\r\nexport function addRule(key: string, rule: Rule) {\r\n  if (!rule) {\r\n    throw Error('rule不能为空')\r\n  }\r\n  if (!rule?.request?.url) {\r\n    throw Error('request的url不能为空')\r\n  }\r\n  store.set(key, rule)\r\n}\r\nexport function updateRule(key: string, rule: Rule) {\r\n  if (!rule) {\r\n    throw Error('rule不能为空')\r\n  }\r\n  const tempRule = store.get(key);\r\n  if (tempRule) {\r\n    store.set(key, { ...tempRule, ...rule })\r\n    return\r\n  }\r\n  store.set(key, rule)\r\n}\r\nexport function deleteRule(key: string) {\r\n  store.delete(key)\r\n}\r\nexport function disableRule(key: string) {\r\n  const tempRule = store.get(key);\r\n  if (tempRule) {\r\n    tempRule.disabled = true\r\n  }\r\n}\r\nexport function enableRule(key: string) {\r\n  const tempRule = store.get(key);\r\n  if (tempRule) {\r\n    tempRule.disabled = false\r\n  }\r\n}\r\nexport function getRule(key: string) {\r\n  return store.get(key)\r\n}\r\n\r\nexport function getRuleByUrl(url: string) {\r\n  const urlObj = new URL(url);\r\n  const pathNames = urlObj.pathname;\r\n  return [...store.values()].find(rule => {\r\n    return pathNames.includes(rule.request.url)\r\n  })\r\n}\r\n\r\nexport function query(queryList: string[]) {\r\n  return micromatch([...store.keys()], queryList)\r\n}\r\n\r\n","import chokidar from 'chokidar';\r\nimport fs from 'fs';\r\nimport YAML from 'js-yaml';\r\nimport path from 'path';\r\nimport {\r\n  addRule,\r\n  deleteRule,\r\n  getRule,\r\n  query,\r\n  disableRule,\r\n  enableRule,\r\n} from './rule';\r\nexport { getRuleByUrl, getRule } from './rule';\r\nimport { addFunction } from '@zhangxin/mock-monkey-core';\r\nimport findup from 'findup-sync';\r\nimport micromatch from 'micromatch';\r\nimport { Rule } from './interface';\r\n\r\nconst NEXT = 'next';\r\n\r\nlet currentWatcher: chokidar.FSWatcher;\r\nexport async function watch(watchPath: string) {\r\n  if (currentWatcher) {\r\n    await currentWatcher.close();\r\n  }\r\n  if (!fs.existsSync(watchPath)) throw Error('path not exist');\r\n  currentWatcher = chokidar.watch(watchPath).on('all', (eventName, _path) => {\r\n    queue(\r\n      [handleInvalidYaml, handleJSFile, handleYAMLFile, handleIgnore],\r\n      [eventName, _path.replace(/[\\\\]/g, '/'), watchPath.replace(/[\\\\]/g, '/')]\r\n    );\r\n  });\r\n}\r\n\r\nfunction getObjFromYAML(filePath: string) {\r\n  const content = fs.readFileSync(filePath, { encoding: 'utf-8' });\r\n  return YAML.load(content) as Rule;\r\n}\r\n// 把json转换为yaml。不catch错误。\r\nfunction getValidJson(content: string) {\r\n  const contentWithoutDocs = content.replace(/\\/\\/[^\\n\\r]*/g, '');\r\n  console.log(contentWithoutDocs);\r\n  const parsed = JSON.parse(contentWithoutDocs);\r\n  // 有符合定义的结构体，就不覆盖用户之前输入了\r\n  if (parsed?.request) {\r\n    return parsed;\r\n  }\r\n  // 没有符合定义的结构体，说明试复制来的后端json对象\r\n  return {\r\n    request: { url: '', body: {} },\r\n    response: {\r\n      body: parsed,\r\n    },\r\n  };\r\n}\r\n\r\nasync function queue(funcs: Function[], params: any[]) {\r\n  for (const func of funcs) {\r\n    const flag = await func(...params);\r\n    if (flag !== NEXT) {\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nasync function handleJSFile(\r\n  eventName: 'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir',\r\n  _path: string\r\n) {\r\n  const parsedPath = path.parse(_path);\r\n  if (parsedPath.ext !== '.js' || !['add', 'change'].includes(eventName))\r\n    return NEXT;\r\n\r\n  const i18n = {\r\n    add: '添加',\r\n    change: '更新',\r\n    unlinkDir: '',\r\n    unlink: '',\r\n    addDir: '',\r\n  };\r\n  try {\r\n    if (eventName === 'change') delete require.cache[_path];\r\n    const mod = require(_path);\r\n    Object.keys(mod).forEach(key => {\r\n      addFunction(key, mod[key]);\r\n    });\r\n    global.sendLog({\r\n      message: `${i18n[eventName]}了函数<span class=\"text-pink-500\">${_path}</span>`,\r\n      date: new Date().valueOf(),\r\n      type: 'success',\r\n      tags: ['添加', '函数'],\r\n    });\r\n  } catch (error) {\r\n    global.sendLog({\r\n      message: `${i18n[eventName]}函数<span class=\"text-pink-500\">${_path}</span>失败，${error.message}`,\r\n      date: new Date().valueOf(),\r\n      type: 'success',\r\n      tags: ['添加', '函数'],\r\n    });\r\n  }\r\n  return\r\n}\r\n\r\nfunction addFile(filePath: string) {\r\n  addRule(filePath, {\r\n    ...getObjFromYAML(filePath),\r\n    filePath,\r\n    disabled: false,\r\n  } as Rule);\r\n}\r\nfunction updateFile(filePath: string) {\r\n  addRule(filePath, getObjFromYAML(filePath) as Rule);\r\n}\r\nfunction deleteFile(filePath: string) {\r\n  deleteRule(filePath);\r\n}\r\n\r\nasync function handleYAMLFile(\r\n  eventName: 'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir',\r\n  _path: string,\r\n  root: string\r\n) {\r\n  const parsedPath = path.parse(_path);\r\n  if (parsedPath.ext !== '.yaml') return NEXT;\r\n  if (eventName === 'add') {\r\n    try {\r\n      addFile(_path);\r\n      const ignoreRules = getIgnoreRules(parsedPath.dir, root);\r\n      if (micromatch.isMatch(_path, ignoreRules)) {\r\n        disableRule(_path);\r\n        global.sendLog({\r\n          message: `禁用了模板<span class=\"text-pink-500\">${_path}</span>`,\r\n          date: new Date().valueOf(),\r\n          type: 'warning',\r\n          tags: ['禁用'],\r\n        });\r\n        return;\r\n      }\r\n      global.sendLog({\r\n        message: `添加了模板<span class=\"text-pink-500\">${_path}</span>`,\r\n        date: new Date().valueOf(),\r\n        type: 'success',\r\n        tags: ['添加'],\r\n      });\r\n    } catch (error) {\r\n      global.sendLog({\r\n        message: `添加模板<span class=\"text-pink-500\">${_path}</span>失败,${error.message}`,\r\n        date: new Date().valueOf(),\r\n        type: 'error',\r\n      });\r\n    }\r\n  }\r\n  if (eventName === 'change') {\r\n    try {\r\n      updateFile(_path);\r\n      global.sendLog({\r\n        date: new Date().valueOf(),\r\n        message: `更新了模板<span class=\"text-pink-500\">${_path}</span>`,\r\n        type: 'success',\r\n        tags: ['更新'],\r\n      });\r\n    } catch (error) {\r\n      global.sendLog({\r\n        message: `更新模板<span class=\"text-pink-500\">${_path}</span>失败`,\r\n        date: new Date().valueOf(),\r\n        type: 'error',\r\n      });\r\n    }\r\n  }\r\n  if (eventName === 'unlinkDir') {\r\n    query([`${_path}/*`]).forEach(filePath => {\r\n      deleteRule(filePath);\r\n      global.sendLog({\r\n        message: `删除了模板<span class=\"text-pink-500\">${_path}</span>`,\r\n        date: new Date().valueOf(),\r\n        type: 'warning',\r\n        tags: ['禁用'],\r\n      });\r\n    });\r\n  }\r\n  if (eventName === 'unlink') {\r\n    deleteFile(_path);\r\n    global.sendLog({\r\n      date: new Date().valueOf(),\r\n      message: `删除了模板<span class=\"text-pink-500\">${_path}</span>`,\r\n      type: 'success',\r\n      tags: ['删除'],\r\n    });\r\n  }\r\n  return\r\n}\r\n\r\nfunction getIgnoreRules(dir: string, root: string) {\r\n  const ignoreFilePath = findup('.ignore', { cwd: dir });\r\n  let ignoreRules = [] as string[];\r\n  if (ignoreFilePath) {\r\n    ignoreRules = fs\r\n      .readFileSync(ignoreFilePath, { encoding: 'utf-8' })\r\n      .split('\\n')\r\n      .filter(text => !text.startsWith('// '))\r\n      .map(text => {\r\n        const prefixPath = `${\r\n          path.parse(ignoreFilePath.replace(/[\\\\]/g, '/')).dir\r\n        }`.replace(root, '**');\r\n        return `${prefixPath}/${text.replace(/[\\s]*/g, '')}`;\r\n      });\r\n  }\r\n  return ignoreRules;\r\n}\r\n\r\nasync function handleIgnore(\r\n  _eventName: 'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir',\r\n  _path: string,\r\n  root: string\r\n) {\r\n  const parsedPath = path.parse(_path);\r\n  if (parsedPath.name === '.ignore') {\r\n    const ignoreRules = getIgnoreRules(parsedPath.dir, root);\r\n    query(['**']).forEach(filePath => {\r\n      const rule = getRule(filePath);\r\n      if (\r\n        rule?.disabled === true &&\r\n        !micromatch.isMatch(filePath, ignoreRules)\r\n      ) {\r\n        enableRule(filePath);\r\n        global.sendLog({\r\n          message: `启用了模板<span class=\"text-pink-500\">${filePath}</span>`,\r\n          date: new Date().valueOf(),\r\n          type: 'success',\r\n          tags: ['启用'],\r\n        });\r\n        return;\r\n      }\r\n      if (\r\n        rule?.disabled === false &&\r\n        micromatch.isMatch(filePath, ignoreRules)\r\n      ) {\r\n        disableRule(filePath);\r\n        global.sendLog({\r\n          message: `禁用了模板<span class=\"text-pink-500\">${filePath}</span>`,\r\n          date: new Date().valueOf(),\r\n          type: 'warning',\r\n          tags: ['禁用'],\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// 处理非法的yaml格式\r\nasync function handleInvalidYaml(\r\n  eventName: 'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir',\r\n  _path: string\r\n) {\r\n  const parsedPath = path.parse(_path);\r\n  if (!['add', 'change'].includes(eventName)) return NEXT;\r\n  if (parsedPath.ext !== '.yaml') return NEXT;\r\n  let parsedJSON = {\r\n    request: { url: '', body: {} },\r\n    response: { body: {} },\r\n  } as Partial<Rule>;\r\n  const content = fs.readFileSync(_path, { encoding: 'utf-8' });\r\n  if (content === '') {\r\n    fs.writeFileSync(_path, YAML.dump({ ...parsedJSON }), {\r\n      encoding: 'utf-8',\r\n    });\r\n    return;\r\n  }\r\n  try {\r\n    const obj = getValidJson(content);\r\n    fs.writeFileSync(_path, YAML.dump(obj), { encoding: 'utf-8' });\r\n    return;\r\n  } catch (error) {\r\n  }\r\n  try {\r\n    YAML.load(content);\r\n    return NEXT\r\n  } catch (error) {\r\n  }\r\n  return;\r\n}\r\n","import Koa from 'koa';\r\nimport {getRuleByUrl} from '../file/index';\r\n\r\nexport default (server:any) => {\r\n  const app = new Koa();\r\n  app.proxy = true;\r\n  app.silent = true;\r\n  app.use((ctx) => {\r\n    const href = ctx.request.href\r\n    const rule = getRuleByUrl(href)\r\n    if(rule){\r\n      const sendStr = encodeURIComponent(rule.filePath)\r\n      ctx.body = `* monkey://${sendStr}`\r\n    } else {\r\n      ctx.body = `${href} ${href}`\r\n    }\r\n  })\r\n  server.on('request', app.callback());\r\n};\r\n","import { getValueByStatement } from '@zhangxin/mock-monkey-core';\r\n\r\nfunction isEqual(statement: string, val: any, scope: any) {\r\n  const result = getValueByStatement(statement, scope);\r\n  if (typeof result === 'function') {\r\n    result(val);\r\n  }\r\n  return val === result;\r\n}\r\n\r\n// 根据多数接口调查，request body一般就一层结构，所以做个简单的，只遍历第一层的\r\nexport function isValid(\r\n  father: unknown,\r\n  child: unknown,\r\n  scope: unknown\r\n): boolean {\r\n  if (child == null) {\r\n    return true;\r\n  }\r\n  if (father == null) {\r\n    throw Error('入参不存在，但是却配置了入参验证, 所以请求失败');\r\n  }\r\n  Object.keys(child as { [key: string]: any }).forEach(key => {\r\n    const cv = (child as { [key: string]: any })[key];\r\n    const fv = (father as { [key: string]: any })[key];\r\n    const bo = isEqual(cv, fv, scope);\r\n    if (bo === false) {\r\n      throw Error(`入参字段 ${key} 不符合判定规则`);\r\n    }\r\n  });\r\n  return true\r\n}\r\n","import { getRule } from '../file/index';\r\nimport { generate } from '@zhangxin/mock-monkey-core';\r\nimport { Rule } from '../file/interface';\r\nimport http from 'http';\r\nimport { isValid } from '../utils/match';\r\n\r\ninterface Request {\r\n  originalReq: {\r\n    ruleValue: string;\r\n  };\r\n  passThrough: () => {};\r\n}\r\n\r\nconst NEXT = 'next';\r\n\r\nexport default (server: http.Server) => {\r\n  server.on(\r\n    'request',\r\n    (req: http.IncomingMessage & Request, res: http.OutgoingMessage) => {\r\n      const filePath = decodeURIComponent(req.originalReq.ruleValue);\r\n      const rule = getRule(filePath);\r\n      if (filePath) {\r\n        let data = '';\r\n        req.on('data', (chunk: any) => {\r\n          data += chunk.toString('utf-8');\r\n        });\r\n        req.on('end', () => {\r\n          if (!data) {\r\n            data = '{}';\r\n          }\r\n          try {\r\n            const url = new URL(req.url || '', `http://${req.headers.host}`);\r\n            const queryData: { [key: string]: any } = {};\r\n            url.searchParams.forEach((val, key) => {\r\n              queryData[key] = val;\r\n            });\r\n            const requestData = { ...JSON.parse(data), ...queryData };\r\n            queue(\r\n              [handleCors, handleRequestDataMatch, handleDelay, handleDefault],\r\n              [req, res, rule, requestData]\r\n            );\r\n          } catch (error) {\r\n            res.setHeader('Content-Type', 'text/plain');\r\n            res.end(error.message, 'utf-8');\r\n            console.log(error);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  );\r\n};\r\n\r\n// 延迟功能\r\nfunction handleDelay(\r\n  request: http.IncomingMessage & Request,\r\n  response: http.OutgoingMessage,\r\n  rule: Rule,\r\n  requestData: any\r\n) {\r\n  if (typeof rule?.delay === 'number') {\r\n    const body = generate(rule?.response?.body, requestData);\r\n    const url = new URL(request.url || '', `http://${request.headers.host}`);\r\n    const filePath = decodeURIComponent(request.originalReq.ruleValue);\r\n    setTimeout(() => {\r\n      response.end(JSON.stringify(body), 'utf-8');\r\n      global.sendLog({\r\n        type: 'success',\r\n        message: `请求<span class=\"text-purple-500\">${url.pathname}\r\n          </span>延迟${rule.delay}ms, 命中文件<span class=\"text-pink-500\">${filePath}</span>`,\r\n        date: new Date().valueOf(),\r\n        tags: ['命中'],\r\n      });\r\n    }, rule.delay);\r\n    return;\r\n  }\r\n  return NEXT;\r\n}\r\n\r\n// 跨域设置\r\nfunction handleCors(\r\n  request: http.IncomingMessage & Request,\r\n  response: http.OutgoingMessage\r\n) {\r\n  response.setHeader('Access-Control-Allow-Credentials', 'true');\r\n  response.setHeader(\r\n    'Access-Control-Allow-Origin',\r\n    request.headers['origin'] || ''\r\n  );\r\n  response.setHeader('Content-Type', 'application/json');\r\n  return NEXT;\r\n}\r\n\r\n// 对入参的验证。\r\nfunction handleRequestDataMatch(\r\n  request: http.IncomingMessage & Request,\r\n  response: http.ServerResponse,\r\n  rule: Rule,\r\n  requestData: any\r\n) {\r\n  try {\r\n    isValid(requestData, rule?.request?.body, requestData);\r\n  } catch (error) {\r\n    response.statusCode = 400;\r\n    response.statusMessage = error.message;\r\n    response.end(\r\n      JSON.stringify({ code: 400, message: error.message }),\r\n      'utf-8'\r\n    );\r\n    const filePath = decodeURIComponent(request.originalReq.ruleValue);\r\n    const url = new URL(request.url || '', `http://${request.headers.host}`);\r\n    global.sendLog({\r\n      type: 'error',\r\n      message: `请求<span class=\"text-purple-500\">${url.pathname}</span>命中文件<span class=\"text-pink-500\">${filePath}</span>,但是参数有问题`,\r\n      date: new Date().valueOf(),\r\n      tags: ['命中','入参'],\r\n    });\r\n    return;\r\n  }\r\n  return NEXT;\r\n}\r\n// 兜底方案\r\nfunction handleDefault(\r\n  request: http.IncomingMessage & Request,\r\n  response: http.OutgoingMessage,\r\n  rule: Rule,\r\n  requestData: any\r\n) {\r\n  const filePath = decodeURIComponent(request.originalReq.ruleValue);\r\n  const body = generate(rule?.response?.body, requestData);\r\n  const url = new URL(request.url || '', `http://${request.headers.host}`);\r\n  response.end(JSON.stringify(body), 'utf-8');\r\n  global.sendLog({\r\n    type: 'success',\r\n    message: `请求<span class=\"text-purple-500\">${url.pathname}</span>命中文件<span class=\"text-pink-500\">${filePath}</span>`,\r\n    date: new Date().valueOf(),\r\n    tags: ['命中'],\r\n  });\r\n}\r\n\r\nfunction queue(items: Function[], params: unknown[]) {\r\n  let isBreak = false;\r\n  items.forEach(func => {\r\n    if (!isBreak) {\r\n      isBreak = func(...params) === NEXT ? false : true;\r\n    }\r\n  });\r\n}\r\n","import Koa from 'koa';\r\nimport Router from '@koa/router';\r\n// @ts-ignore\r\nimport cors from '@koa/cors';\r\nimport { watch } from '../file/index';\r\nimport body from 'koa-body';\r\nimport send from 'koa-send';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\n// @ts-ignore\r\nimport { Server } from 'ws';\r\nimport { Log } from '../interface/log';\r\n\r\nconst app = new Koa();\r\nconst router = new Router();\r\n\r\nrouter.post('/cgi-bin/root', async ctx => {\r\n  const body = ctx.request.body;\r\n  if (!body.path) {\r\n    ctx.response.status = 500;\r\n    ctx.response.message = 'do not find property \"path\"';\r\n    return;\r\n  }\r\n  try {\r\n    const config = JSON.parse(\r\n      fs.readFileSync('./config.json', { encoding: 'utf-8' })\r\n    );\r\n    config.root = body.path;\r\n    fs.writeFileSync('./config.json', JSON.stringify(config), {\r\n      encoding: 'utf-8',\r\n    });\r\n    await watch(body.path);\r\n    ctx.response.status = 200;\r\n    ctx.response.body = JSON.stringify({ path: body.path });\r\n  } catch (error) {\r\n    ctx.response.status = 500;\r\n    ctx.response.message = error.message;\r\n  }\r\n});\r\nrouter.get('/cgi-bin/root', async ctx => {\r\n  const { root } = JSON.parse(\r\n    fs.readFileSync('./config.json', { encoding: 'utf-8' })\r\n  );\r\n  ctx.response.status = 200;\r\n  ctx.response.body = JSON.stringify({ path: root });\r\n});\r\n\r\napp.proxy = true;\r\napp.silent = true;\r\napp\r\n  .use(body())\r\n  .use(cors({ credentials: true }))\r\n  .use(router.routes())\r\n  .use(router.allowedMethods())\r\n  .use(async ctx => {\r\n    const root = path.resolve(__dirname, '../public');\r\n    const parsedPath = path.parse(ctx.path);\r\n    if (ctx.path === '/plugin.monkey/') {\r\n      await send(ctx, './index.html', { root });\r\n      return;\r\n    }\r\n    if (parsedPath.ext !== '') {\r\n      const isExist = fs.existsSync(`${root}${ctx.path}`);\r\n      if (isExist) {\r\n        await send(ctx, `.${ctx.path}`, { root });\r\n        return;\r\n      }\r\n      ctx.response.status = 500;\r\n      ctx.response.message = 'file not found';\r\n      return;\r\n    }\r\n    await send(ctx, './index.html', { root });\r\n  });\r\n\r\nlet hasInit = false;\r\nexport default (server: any) => {\r\n  if (!fs.existsSync('./config.json')) {\r\n    fs.writeFileSync('./config.json', JSON.stringify({ root: '' }), {\r\n      encoding: 'utf-8',\r\n    });\r\n  }\r\n  server.on('request', app.callback());\r\n  const wss = new Server({ port: 9999 });\r\n  wss.on('connection', async function(_ws: any) {\r\n    global.sendLog = (log: Log) => {\r\n      _ws.send(JSON.stringify(log));\r\n    };\r\n    if (!hasInit) {\r\n      const { root } = JSON.parse(\r\n        fs.readFileSync('./config.json', { encoding: 'utf-8' })\r\n      );\r\n      if (root) {\r\n        try {\r\n          await watch(root);\r\n        } catch (error) {\r\n          sendLog({\r\n            type: 'error',\r\n            message: error.message,\r\n            date: new Date().valueOf(),\r\n            tags: ['路径'],\r\n          });\r\n        }\r\n        hasInit = true;\r\n      }\r\n    }\r\n  });\r\n};\r\n"],"names":["store","Map","addRule","key","rule","Error","request","url","set","deleteRule","delete","disableRule","tempRule","get","disabled","enableRule","getRule","getRuleByUrl","urlObj","URL","pathNames","pathname","values","find","includes","query","queryList","micromatch","keys","NEXT","currentWatcher","watch","watchPath","close","fs","existsSync","chokidar","on","eventName","_path","queue","handleInvalidYaml","handleJSFile","handleYAMLFile","handleIgnore","replace","getObjFromYAML","filePath","content","readFileSync","encoding","YAML","load","getValidJson","contentWithoutDocs","console","log","parsed","JSON","parse","body","response","funcs","params","func","flag","parsedPath","path","ext","i18n","add","change","unlinkDir","unlink","addDir","require","cache","mod","Object","forEach","addFunction","global","sendLog","message","date","Date","valueOf","type","tags","error","addFile","updateFile","deleteFile","root","ignoreRules","getIgnoreRules","dir","isMatch","ignoreFilePath","findup","cwd","split","filter","text","startsWith","map","prefixPath","_eventName","name","parsedJSON","writeFileSync","dump","obj","server","app","Koa","proxy","silent","use","ctx","href","sendStr","encodeURIComponent","callback","isEqual","statement","val","scope","result","getValueByStatement","isValid","father","child","cv","fv","bo","req","res","decodeURIComponent","originalReq","ruleValue","data","chunk","toString","headers","host","queryData","searchParams","requestData","handleCors","handleRequestDataMatch","handleDelay","handleDefault","setHeader","end","delay","generate","setTimeout","stringify","statusCode","statusMessage","code","items","isBreak","router","Router","post","status","config","cors","credentials","routes","allowedMethods","resolve","__dirname","send","isExist","hasInit","wss","Server","port","_ws"],"mappings":"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"}