{"version":3,"file":"whistle.monkey.cjs.development.js","sources":["../src/file/rule.ts","../src/file/handle/invalidYaml.ts","../src/file/handle/jsFile.ts","../src/utils/ignore.ts","../src/file/handle/ruleYaml.ts","../src/file/handle/ignore.ts","../src/file/index.ts","../src/whistleServer/rulesServer.ts","../src/utils/match.ts","../src/whistleServer/server.ts","../src/whistleServer/ui.ts"],"sourcesContent":["import { Rule } from './interface';\r\nimport micromatch from 'micromatch';\r\n\r\nconst store = new Map<string, Rule>()\r\n\r\nexport function addRule(key: string, rule: Rule) {\r\n  if (!rule) {\r\n    throw Error('rule不能为空')\r\n  }\r\n  if (!rule?.request?.url) {\r\n    throw Error('request的url不能为空')\r\n  }\r\n  store.set(key, rule)\r\n}\r\nexport function updateRule(key: string, rule: Rule) {\r\n  if (!rule) {\r\n    throw Error('rule不能为空')\r\n  }\r\n  const tempRule = store.get(key);\r\n  if (tempRule) {\r\n    store.set(key, { ...tempRule, ...rule })\r\n    return\r\n  }\r\n  store.set(key, rule)\r\n}\r\nexport function deleteRule(key: string) {\r\n  store.delete(key)\r\n}\r\nexport function disableRule(key: string) {\r\n  const tempRule = store.get(key);\r\n  if (tempRule) {\r\n    tempRule.disabled = true\r\n  }\r\n}\r\nexport function enableRule(key: string) {\r\n  const tempRule = store.get(key);\r\n  if (tempRule) {\r\n    tempRule.disabled = false\r\n  }\r\n}\r\nexport function getRule(key: string) {\r\n  return store.get(key)\r\n}\r\n\r\nexport function getRuleByUrl(url: string) {\r\n  const urlObj = new URL(url);\r\n  const pathNames = urlObj.pathname;\r\n  return [...store.values()].find(rule => {\r\n    return pathNames.includes(rule.request.url)\r\n  })\r\n}\r\n\r\nexport function query(queryList: string[]) {\r\n  return micromatch([...store.keys()], queryList)\r\n}\r\n\r\n","import path from 'path';\r\nimport YAML from 'js-yaml';\r\nimport fs from 'fs';\r\nimport { Rule, SharedStore } from '../interface';\r\n\r\n// 把json转换为yaml。不catch错误。\r\nfunction getValidJson(content: string) {\r\n  const contentWithoutDocs = content.replace(/\\/\\/[^\\n\\r]*/g, '');\r\n  const parsed = JSON.parse(contentWithoutDocs);\r\n  // 有符合定义的结构体，就不覆盖用户之前输入了\r\n  if (parsed?.request) {\r\n    return parsed;\r\n  }\r\n  // 没有符合定义的结构体，说明试复制来的后端json对象\r\n  return {\r\n    request: { url: '', body: {} },\r\n    response: {\r\n      body: parsed,\r\n    },\r\n  };\r\n}\r\n\r\n// 处理非法的yaml格式\r\nexport async function handleInvalidYaml(store: SharedStore) {\r\n  const { _path, eventName } = store\r\n  const parsedPath = path.parse(_path);\r\n  if (!['add', 'change'].includes(eventName)) return 'next';\r\n  if (parsedPath.ext !== '.yaml') return 'next';\r\n  let parsedJSON = { request: { url: 'defaultUrl', body: {} }, response: { body: {} } } as Partial<Rule>;\r\n  const content = fs.readFileSync(_path, { encoding: 'utf-8' });\r\n  // 文件内容为空，初始化一个模板\r\n  if (content === '') {\r\n    fs.writeFileSync(_path, YAML.dump({ ...parsedJSON }), {encoding: 'utf-8'});\r\n    return;\r\n  }\r\n  try {\r\n    // 如果输入的是合法json,把他变成yaml格式\r\n    const obj = getValidJson(content);\r\n    fs.writeFileSync(_path, YAML.dump(obj), { encoding: 'utf-8' });\r\n    return;\r\n  } catch (error) { \r\n   \r\n  }\r\n  try {\r\n    store.rule = YAML.load(content) as Rule;\r\n    return 'next';\r\n  } catch (error) {\r\n    // 如果yaml格式化失败，发送问题到log\r\n    global.sendLog({\r\n      message: `${_path}文件有格式问题<span class=\"text-pink-500\">${error.message}</span>`,\r\n      type: 'error',\r\n      tags: ['yaml', '格式'],\r\n    });\r\n  }\r\n  return;\r\n}","import { addFunction } from '@zhangxin/mock-monkey-core';\r\nimport path from 'path';\r\nexport { getRuleByUrl, getRule } from '../rule';\r\nimport { SharedStore } from '../interface';\r\n\r\nexport async function handleJSFile(store:SharedStore) {\r\n  const { _path, eventName } = store\r\n  const parsedPath = path.parse(_path);\r\n  if (parsedPath.ext !== '.js' || !['add', 'change'].includes(eventName)) return 'next';\r\n  const i18n = {\r\n    add: '添加',\r\n    change: '更新',\r\n    unlinkDir: '',\r\n    unlink: '',\r\n    addDir: '',\r\n  };\r\n  try {\r\n    if (eventName === 'change') delete require.cache[_path];\r\n    const mod = require(_path);\r\n    Object.keys(mod).forEach(key => {\r\n      addFunction(key, mod[key]);\r\n    });\r\n    global.sendLog({\r\n      message: `${i18n[eventName]}了函数<span class=\"text-pink-500\">${_path}</span>`,\r\n      type: 'success',\r\n      tags: ['添加', '函数'],\r\n    });\r\n  } catch (error) {\r\n    global.sendLog({\r\n      message: `${i18n[eventName]}函数<span class=\"text-pink-500\">${_path}</span>失败，${error.message}`,\r\n      type: 'success',\r\n      tags: ['添加', '函数'],\r\n    });\r\n  }\r\n  return;\r\n}","import fs from 'fs';\r\nimport path from 'path';\r\nimport findup from 'findup-sync';\r\n\r\nexport function getIgnoreRules(dir: string, root: string) {\r\n  const ignoreFilePath = findup('.ignore', { cwd: dir });\r\n  let ignoreRules = [] as string[];\r\n  if (ignoreFilePath) {\r\n    ignoreRules = fs\r\n      .readFileSync(ignoreFilePath, { encoding: 'utf-8' })\r\n      .split('\\n')\r\n      .filter(text => !text.startsWith('// '))\r\n      .map(text => {\r\n        const prefixPath = `${path.parse(ignoreFilePath.replace(/[\\\\]/g, '/')).dir\r\n          }`.replace(root, '**');\r\n        return `${prefixPath}/${text.replace(/[\\s]*/g, '')}`;\r\n      });\r\n  }\r\n  return ignoreRules;\r\n}","import path from 'path';\r\nimport { addRule, deleteRule, query, disableRule, updateRule } from '../rule';\r\nimport micromatch from 'micromatch';\r\nimport { Rule, SharedStore } from '@/file/interface';\r\nimport { getIgnoreRules } from '@/utils/ignore';\r\n\r\n\r\nexport async function handleYAMLFile(store: SharedStore) {\r\n  const { _path, eventName, root } = store\r\n  const parsedPath = path.parse(_path);\r\n  if (parsedPath.ext !== '.yaml') return 'next';\r\n  if (eventName === 'add') {\r\n    try {\r\n      addRule(_path, { ...store.rule as Rule, filePath: _path, disabled: false })\r\n      const ignoreRules = getIgnoreRules(parsedPath.dir, root);\r\n      if (micromatch.isMatch(_path, ignoreRules)) {\r\n        disableRule(_path);\r\n        global.sendLog({ message: `禁用了模板<span class=\"text-pink-500\">${_path}</span>`, type: 'warning', tags: ['禁用'] });\r\n        return;\r\n      }\r\n      global.sendLog({ message: `添加了模板<span class=\"text-pink-500\">${_path}</span>`, type: 'success', tags: ['添加'] });\r\n    } catch (error) {\r\n      global.sendLog({ message: `添加模板<span class=\"text-pink-500\">${_path}</span>失败,${error.message}`, type: 'error' });\r\n    }\r\n  }\r\n  if (eventName === 'change') {\r\n    try {\r\n      updateRule(_path, store.rule as Rule);\r\n      global.sendLog({ message: `更新了模板<span class=\"text-pink-500\">${_path}</span>`, type: 'success', tags: ['更新'] });\r\n    } catch (error) {\r\n      global.sendLog({ message: `更新模板<span class=\"text-pink-500\">${_path}</span>失败`, type: 'error' });\r\n    }\r\n  }\r\n  if (eventName === 'unlinkDir') {\r\n    query([`${_path}/*`]).forEach(filePath => {\r\n      deleteRule(filePath);\r\n      global.sendLog({ message: `删除了模板<span class=\"text-pink-500\">${_path}</span>`, type: 'warning', tags: ['禁用'] });\r\n    });\r\n  }\r\n  if (eventName === 'unlink') {\r\n    deleteRule(_path);\r\n    global.sendLog({ message: `删除了模板<span class=\"text-pink-500\">${_path}</span>`, type: 'success', tags: ['删除'] });\r\n  }\r\n  return;\r\n}","import path from 'path';\r\nimport { getRule, query, disableRule, enableRule } from '@/file/rule';\r\nimport micromatch from 'micromatch';\r\nimport { SharedStore } from '@/file/interface';\r\nimport { getIgnoreRules } from '@/utils/ignore';\r\n\r\n\r\nexport async function handleIgnore(store: SharedStore) {\r\n  const { _path, root } = store\r\n  const parsedPath = path.parse(_path);\r\n  if (parsedPath.name === '.ignore') {\r\n    const ignoreRules = getIgnoreRules(parsedPath.dir, root);\r\n    query(['**']).forEach(filePath => {\r\n      const rule = getRule(filePath);\r\n      if (\r\n        rule?.disabled === true &&\r\n        !micromatch.isMatch(filePath, ignoreRules)\r\n      ) {\r\n        enableRule(filePath);\r\n        global.sendLog({\r\n          message: `启用了模板<span class=\"text-pink-500\">${filePath}</span>`,\r\n          type: 'success',\r\n          tags: ['启用'],\r\n        });\r\n        return;\r\n      }\r\n      if (\r\n        rule?.disabled === false &&\r\n        micromatch.isMatch(filePath, ignoreRules)\r\n      ) {\r\n        disableRule(filePath);\r\n        global.sendLog({\r\n          message: `禁用了模板<span class=\"text-pink-500\">${filePath}</span>`,\r\n          type: 'warning',\r\n          tags: ['禁用'],\r\n        });\r\n      }\r\n    });\r\n  }\r\n}","import chokidar from 'chokidar';\r\nimport fs from 'fs';\r\nexport { getRuleByUrl, getRule } from '@/file/rule';\r\nimport { SharedStore } from '@/file/interface';\r\nimport { handleInvalidYaml } from '@/file/handle/invalidYaml';\r\nimport { handleJSFile } from '@/file/handle/jsFile';\r\nimport { handleYAMLFile } from '@/file/handle/ruleYaml';\r\nimport { handleIgnore } from '@/file/handle/ignore';\r\n\r\n\r\nlet currentWatcher: chokidar.FSWatcher;\r\nexport async function watch(watchPath: string) {\r\n  if (currentWatcher) {\r\n    await currentWatcher.close();\r\n  }\r\n  if (!fs.existsSync(watchPath)) throw Error('path not exist');\r\n  currentWatcher = chokidar.watch(watchPath).on('all', (eventName, _path) => {\r\n    queue([handleInvalidYaml, handleJSFile, handleYAMLFile, handleIgnore], {\r\n      eventName,\r\n      _path: _path.replace(/[\\\\]/g, '/'),\r\n      root: watchPath.replace(/[\\\\]/g, '/'),\r\n      content: ''\r\n    });\r\n  });\r\n}\r\n\r\nasync function queue(\r\n  funcs: ((store: SharedStore) => any)[],\r\n  params: SharedStore\r\n) {\r\n  if (!funcs.length) return;\r\n  const store: SharedStore = params;\r\n  for (const func of funcs) {\r\n    const flag = await func(store);\r\n    if (flag !== 'next') {\r\n      break;\r\n    }\r\n  }\r\n}\r\n","import Koa from 'koa';\r\nimport {getRuleByUrl} from '../file/index';\r\n\r\nexport default (server:any) => {\r\n  const app = new Koa();\r\n  app.proxy = true;\r\n  app.silent = true;\r\n  app.use((ctx) => {\r\n    const href = ctx.request.href\r\n    const rule = getRuleByUrl(href)\r\n    if(rule){\r\n      const sendStr = encodeURIComponent(rule.filePath)\r\n      ctx.body = `* monkey://${sendStr}`\r\n    } else {\r\n      ctx.body = `${href} ${href}`\r\n    }\r\n  })\r\n  server.on('request', app.callback());\r\n};\r\n","import { getValueByStatement } from '@zhangxin/mock-monkey-core';\r\n\r\nfunction isEqual(statement: string, val: any, scope: any) {\r\n  const result = getValueByStatement(statement, scope);\r\n  if (typeof result === 'function') {\r\n    result(val);\r\n  }\r\n  return val === result;\r\n}\r\n\r\n// 根据多数接口调查，request body一般就一层结构，所以做个简单的，只遍历第一层的\r\nexport function isValid(\r\n  father: unknown,\r\n  child: unknown,\r\n  scope: unknown\r\n): boolean {\r\n  if (child == null) {\r\n    return true;\r\n  }\r\n  if (father == null) {\r\n    throw Error('入参不存在，但是却配置了入参验证, 所以请求失败');\r\n  }\r\n  Object.keys(child as { [key: string]: any }).forEach(key => {\r\n    const cv = (child as { [key: string]: any })[key];\r\n    const fv = (father as { [key: string]: any })[key];\r\n    const bo = isEqual(cv, fv, scope);\r\n    if (bo === false) {\r\n      throw Error(`入参字段 ${key} 不符合判定规则`);\r\n    }\r\n  });\r\n  return true\r\n}\r\n","import { getRule } from '../file/index';\r\nimport { generate } from '@zhangxin/mock-monkey-core';\r\nimport { Rule } from '../file/interface';\r\nimport http from 'http';\r\nimport { isValid } from '../utils/match';\r\n\r\ninterface Request {\r\n  originalReq: {\r\n    ruleValue: string;\r\n  };\r\n  passThrough: () => {};\r\n}\r\n\r\nconst NEXT = 'next';\r\n\r\nexport default (server: http.Server) => {\r\n  server.on(\r\n    'request',\r\n    (req: http.IncomingMessage & Request, res: http.OutgoingMessage) => {\r\n      const filePath = decodeURIComponent(req.originalReq.ruleValue);\r\n      const rule = getRule(filePath);\r\n      if (filePath) {\r\n        let data = '';\r\n        req.on('data', (chunk: any) => {\r\n          data += chunk.toString('utf-8');\r\n        });\r\n        req.on('end', () => {\r\n          if (!data) {\r\n            data = '{}';\r\n          }\r\n          try {\r\n            const url = new URL(req.url || '', `http://${req.headers.host}`);\r\n            const queryData: { [key: string]: any } = {};\r\n            url.searchParams.forEach((val, key) => {\r\n              queryData[key] = val;\r\n            });\r\n            const requestData = { ...JSON.parse(data), ...queryData };\r\n            queue(\r\n              [handleCors, handleRequestDataMatch, handleDelay, handleDefault],\r\n              [req, res, rule, requestData]\r\n            );\r\n          } catch (error) {\r\n            res.setHeader('Content-Type', 'text/plain');\r\n            res.end(error.message, 'utf-8');\r\n            console.log(error);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  );\r\n};\r\n\r\n// 延迟功能\r\nfunction handleDelay(\r\n  request: http.IncomingMessage & Request,\r\n  response: http.OutgoingMessage,\r\n  rule: Rule,\r\n  requestData: any\r\n) {\r\n  if (typeof rule?.delay === 'number') {\r\n    const body = generate(rule?.response?.body, requestData);\r\n    const url = new URL(request.url || '', `http://${request.headers.host}`);\r\n    const filePath = decodeURIComponent(request.originalReq.ruleValue);\r\n    setTimeout(() => {\r\n      response.end(JSON.stringify(body), 'utf-8');\r\n      global.sendLog({\r\n        type: 'success',\r\n        message: `请求<span class=\"text-purple-500\">${url.pathname}\r\n          </span>延迟${rule.delay}ms, 命中文件<span class=\"text-pink-500\">${filePath}</span>`,\r\n        tags: ['命中'],\r\n      });\r\n    }, rule.delay);\r\n    return;\r\n  }\r\n  return NEXT;\r\n}\r\n\r\n// 跨域设置\r\nfunction handleCors(\r\n  request: http.IncomingMessage & Request,\r\n  response: http.OutgoingMessage\r\n) {\r\n  response.setHeader('Access-Control-Allow-Credentials', 'true');\r\n  response.setHeader(\r\n    'Access-Control-Allow-Origin',\r\n    request.headers['origin'] || ''\r\n  );\r\n  response.setHeader('Content-Type', 'application/json');\r\n  return NEXT;\r\n}\r\n\r\n// 对入参的验证。\r\nfunction handleRequestDataMatch(\r\n  request: http.IncomingMessage & Request,\r\n  response: http.ServerResponse,\r\n  rule: Rule,\r\n  requestData: any\r\n) {\r\n  try {\r\n    isValid(requestData, rule?.request?.body, requestData);\r\n  } catch (error) {\r\n    response.statusCode = 400;\r\n    response.statusMessage = error.message;\r\n    response.end(\r\n      JSON.stringify({ code: 400, message: error.message }),\r\n      'utf-8'\r\n    );\r\n    const filePath = decodeURIComponent(request.originalReq.ruleValue);\r\n    const url = new URL(request.url || '', `http://${request.headers.host}`);\r\n    global.sendLog({\r\n      type: 'error',\r\n      message: `请求<span class=\"text-purple-500\">${url.pathname}</span>命中文件<span class=\"text-pink-500\">${filePath}</span>,但是参数有问题`,\r\n      tags: ['命中','入参'],\r\n    });\r\n    return;\r\n  }\r\n  return NEXT;\r\n}\r\n// 兜底方案\r\nfunction handleDefault(\r\n  request: http.IncomingMessage & Request,\r\n  response: http.OutgoingMessage,\r\n  rule: Rule,\r\n  requestData: any\r\n) {\r\n  const filePath = decodeURIComponent(request.originalReq.ruleValue);\r\n  const body = generate(rule?.response?.body, requestData);\r\n  const url = new URL(request.url || '', `http://${request.headers.host}`);\r\n  response.end(JSON.stringify(body), 'utf-8');\r\n  global.sendLog({\r\n    type: 'success',\r\n    message: `请求<span class=\"text-purple-500\">${url.pathname}</span>命中文件<span class=\"text-pink-500\">${filePath}</span>`,\r\n    tags: ['命中'],\r\n  });\r\n}\r\n\r\nfunction queue(items: Function[], params: unknown[]) {\r\n  let isBreak = false;\r\n  items.forEach(func => {\r\n    if (!isBreak) {\r\n      isBreak = func(...params) === NEXT ? false : true;\r\n    }\r\n  });\r\n}\r\n","import Koa from 'koa';\r\nimport Router from '@koa/router';\r\n// @ts-ignore\r\nimport cors from '@koa/cors';\r\nimport { watch } from '../file/index';\r\nimport body from 'koa-body';\r\nimport send from 'koa-send';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\n// @ts-ignore\r\nimport { Server } from 'ws';\r\nimport { Log } from '../interface/log';\r\n\r\nconst app = new Koa();\r\nconst router = new Router();\r\n\r\nrouter.post('/cgi-bin/root', async ctx => {\r\n  const body = ctx.request.body;\r\n  if (!body.path) {\r\n    ctx.response.status = 500;\r\n    ctx.response.message = 'do not find property \"path\"';\r\n    return;\r\n  }\r\n  try {\r\n    const config = JSON.parse(\r\n      fs.readFileSync('./config.json', { encoding: 'utf-8' })\r\n    );\r\n    config.root = body.path;\r\n    fs.writeFileSync('./config.json', JSON.stringify(config), {\r\n      encoding: 'utf-8',\r\n    });\r\n    await watch(body.path);\r\n    ctx.response.status = 200;\r\n    ctx.response.body = JSON.stringify({ path: body.path });\r\n  } catch (error) {\r\n    ctx.response.status = 500;\r\n    ctx.response.message = error.message;\r\n  }\r\n});\r\nrouter.get('/cgi-bin/root', async ctx => {\r\n  const { root } = JSON.parse(\r\n    fs.readFileSync('./config.json', { encoding: 'utf-8' })\r\n  );\r\n  ctx.response.status = 200;\r\n  ctx.response.body = JSON.stringify({ path: root });\r\n});\r\n\r\napp.proxy = true;\r\napp.silent = true;\r\napp\r\n  .use(body())\r\n  .use(cors({ credentials: true }))\r\n  .use(router.routes())\r\n  .use(router.allowedMethods())\r\n  .use(async ctx => {\r\n    const root = path.resolve(__dirname, '../public');\r\n    const parsedPath = path.parse(ctx.path);\r\n    if (ctx.path === '/plugin.monkey/') {\r\n      await send(ctx, './index.html', { root });\r\n      return;\r\n    }\r\n    if (parsedPath.ext !== '') {\r\n      const isExist = fs.existsSync(`${root}${ctx.path}`);\r\n      if (isExist) {\r\n        await send(ctx, `.${ctx.path}`, { root });\r\n        return;\r\n      }\r\n      ctx.response.status = 500;\r\n      ctx.response.message = 'file not found';\r\n      return;\r\n    }\r\n    await send(ctx, './index.html', { root });\r\n  });\r\n\r\nlet hasInit = false;\r\nexport default (server: any) => {\r\n  if (!fs.existsSync('./config.json')) {\r\n    fs.writeFileSync('./config.json', JSON.stringify({ root: '' }), {\r\n      encoding: 'utf-8',\r\n    });\r\n  }\r\n  server.on('request', app.callback());\r\n  const wss = new Server({ port: 9999 });\r\n  wss.on('connection', async function(_ws: any) {\r\n    global.sendLog = (log: Log) => {\r\n      if(!log.date){\r\n        log.date = new Date().valueOf()\r\n      }\r\n      _ws.send(JSON.stringify(log));\r\n    };\r\n    if (!hasInit) {\r\n      const { root } = JSON.parse(\r\n        fs.readFileSync('./config.json', { encoding: 'utf-8' })\r\n      );\r\n      if (root) {\r\n        try {\r\n          await watch(root);\r\n        } catch (error) {\r\n          sendLog({\r\n            type: 'error',\r\n            message: error.message,\r\n            tags: ['路径'],\r\n          });\r\n        }\r\n        hasInit = true;\r\n      }\r\n    }\r\n  });\r\n};\r\n"],"names":["store","Map","addRule","key","rule","Error","request","url","set","updateRule","tempRule","get","deleteRule","delete","disableRule","disabled","enableRule","getRule","getRuleByUrl","urlObj","URL","pathNames","pathname","values","find","includes","query","queryList","micromatch","keys","getValidJson","content","contentWithoutDocs","replace","parsed","JSON","parse","body","response","handleInvalidYaml","_path","eventName","parsedPath","path","ext","parsedJSON","fs","readFileSync","encoding","writeFileSync","YAML","dump","obj","error","load","global","sendLog","message","type","tags","handleJSFile","i18n","add","change","unlinkDir","unlink","addDir","require","cache","mod","Object","forEach","addFunction","getIgnoreRules","dir","root","ignoreFilePath","findup","cwd","ignoreRules","split","filter","text","startsWith","map","prefixPath","handleYAMLFile","filePath","isMatch","handleIgnore","name","currentWatcher","watch","watchPath","close","existsSync","chokidar","on","queue","funcs","params","length","func","flag","server","app","Koa","proxy","silent","use","ctx","href","sendStr","encodeURIComponent","callback","isEqual","statement","val","scope","result","getValueByStatement","isValid","father","child","cv","fv","bo","NEXT","req","res","decodeURIComponent","originalReq","ruleValue","data","chunk","toString","headers","host","queryData","searchParams","requestData","handleCors","handleRequestDataMatch","handleDelay","handleDefault","setHeader","end","console","log","delay","generate","setTimeout","stringify","statusCode","statusMessage","code","items","isBreak","router","Router","post","status","config","cors","credentials","routes","allowedMethods","resolve","__dirname","send","isExist","hasInit","wss","Server","port","_ws","date","Date","valueOf"],"mappings":"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"}